{"remainingRequest":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/someone/projects/pythia/client/src/components/FilterTable.vue?vue&type=style&index=0&id=07439e36&scoped=true&lang=css&","dependencies":[{"path":"/home/someone/projects/pythia/client/src/components/FilterTable.vue","mtime":1643572037520},{"path":"/home/someone/projects/pythia/client/node_modules/css-loader/dist/cjs.js","mtime":1643623769364},{"path":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1643623769765},{"path":"/home/someone/projects/pythia/client/node_modules/postcss-loader/src/index.js","mtime":1643623769364},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js","mtime":1643623769500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnYtYnRuLm9wQnV0dG9uIHsKICBmb250LXNpemU6IDEuNWVtOwp9Cj4+PiAucmVkLXRleHQgewogIGNvbG9yOiByZWQ7Cn0KPj4+LnYtZGF0YS10YWJsZV9fd3JhcHBlciB7CiAgb3ZlcmZsb3cteTogYXV0bzsKICBvdmVyZmxvdy14OiBhdXRvOwogIG1heC1oZWlnaHQ6IDUwMHB4Owp9Cg=="},{"version":3,"sources":["FilterTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FilterTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card flat >\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"filters\"\n      hide-default-footer\n      :item-class=\"itemRowBackground\"\n      :options=\"{itemsPerPage: -1}\"\n    >\n      <template v-slot:top>\n        <v-toolbar flat>\n          <v-toolbar-title>Filter</v-toolbar-title>\n          <v-divider class=\"mx-4\" inset vertical></v-divider>\n          <v-spacer></v-spacer>\n          <v-dialog v-model=\"dialog\" max-width=\"500px\">\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn\n                color=\"primary\"\n                small\n                class=\"mb-2\"\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              >\n                New Filter\n              </v-btn>\n              <v-btn\n                color=\"primary\"\n                small\n                class=\"mb-2 mr-2\"\n                @click=\"dialogDelete = true\"\n              >\n                Clear Filter\n              </v-btn>\n            </template>\n            <v-card>\n              <v-card-title>\n                <span class=\"text-h5\">Add Filter </span>\n              </v-card-title>\n              <v-card-text>\n                <v-container>\n                  <v-row>\n                    <v-col class=\"d-flex\" cols=\"5\">\n                      <v-select\n                        v-model=\"selectedOption\"\n                        :items=\"options\"\n                        label=\"Select Option\"\n                      ></v-select>\n                    </v-col>\n                    <v-col class=\"d-flex\" cols=\"7\">\n                      <v-text-field\n                        v-model=\"filterText\"\n                        append-icon=\"mdi-filter\"\n                        label=\"Filter*\"\n                        :rules=\"\n                          selectedOption.startsWith('Text') ?  [] : numberRules\n                        \"\n                      ></v-text-field>\n                    </v-col>\n                  </v-row>\n                  <v-row v-if=\"selectedOption == 'Text'\">\n                    <div\n                      v-for=\"(textOption,i) in textOptions\"\n                      v-bind:key=\"i\"\n                      class=\"d-flex pl-2 ml-2\"\n                    >\n                      <v-checkbox\n                        v-model=\"textOption.isActive\"\n                        :label=\"textOption.text\"\n                        class=\"d-flex\"\n                      >\n                      </v-checkbox>\n                    </div>\n                  </v-row>\n                  <v-row v-else-if=\"selectedOption == 'Port'\">\n                    <v-col cols=\"4\">\n                      <v-row\n                        no-gutters\n                        v-for=\"(portOption,i) in portOptions\"\n                        v-bind:key=\"i\"\n                        class=\"d-flex\"\n                      >\n                        <v-checkbox\n                          v-model=\"portOption.isActive\"\n                          :label=\"portOption.text\"\n                          class=\"d-flex\"\n                        >\n                        </v-checkbox>\n                      </v-row>\n                    </v-col>\n                    <v-col class=\"d-flex\" cols=\"8\">\n                      <v-text-field\n                        v-model=\"portProtocolText\"\n                        label=\"Protocol (optional)\"\n                        :rules=\"protocolRules\"\n                      ></v-text-field>\n                    </v-col>\n                  </v-row>\n                  <v-row v-else>\n                    <v-col cols=\"8\">\n                      <v-row\n                        no-gutters\n                        v-for=\"(compOption,i) in compOptions\"\n                        v-bind:key=\"i\"\n                        class=\"d-flex\"\n                      >\n                        <v-checkbox\n                          v-model=\"compOption.isActive\"\n                          :label=\"compOption.text\"\n                          class=\"d-flex\"\n                        >\n                        </v-checkbox>\n                      </v-row>\n                    </v-col>\n                    <v-col class=\"d-flex flex-column\" cols=\"4\">\n                      <v-row\n                        no-gutters\n                        v-for=\"(compOperator, index) in compOperators.operators\"\n                        v-bind:key=\"index\"\n                        class=\"d-flex justify-start align-center\"\n                      >\n                        <v-btn\n                          class=\"opButton\"\n                          @click=\"setOperator(index)\"\n                          text\n                          icon\n                          :color=\"\n                            compOperators.activeOperator == index\n                              ? 'success'\n                              : ''\n                          \"\n                          >{{ compOperator }}\n                        </v-btn>\n                      </v-row>\n                    </v-col>\n                  </v-row>\n                  <v-row class=\"flex align-end\" align-begin\n                    >*  Each space sets an additional filte. </v-row\n                  >\n                  <v-row class=\"flex align-end\" align-begin>* If you want to use spaces for a filter, use \" \".</v-row>\n                </v-container>\n              </v-card-text>\n              <v-card-actions>\n                <v-btn color=\"tertiary\" text @click=\"close\"> Leave </v-btn>\n                <v-spacer></v-spacer>\n                <v-btn color=\"tertiary\" text @click=\"addNegativeFilter\">\n                  Add negative filter\n                </v-btn>\n                <v-btn color=\"tertiary\" text @click=\"addFilter\">\n                  Add filter\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          <v-dialog v-model=\"dialogDelete\" max-width=\"600px\">\n            <v-card>\n              <v-card-title class=\"text-h5\"\n                >Are you sure you want to delete all filters?</v-card-title\n              >\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"tertiary\" text @click=\"dialogDelete = false\"\n                  >Cancel</v-btn\n                >\n                <v-btn color=\"tertiary\" text @click=\"removeAllFilters\"\n                  >OK</v-btn\n                >\n                <v-spacer></v-spacer>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon small @click=\"removeFilter(item)\"> mdi-delete </v-icon>\n      </template>\n    </v-data-table>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  name: \"FilterTable\",\n  data: () => ({\n    patternNumber: /^(-?\\d+(\\.\\d+)?\\s{0,1})*$/,\n    patternProtocol: /^((?!(\\s)).)*$/,\n\n    numberRules: [\n      (value) => {\n        const pattern = /^(-?\\d+(\\.\\d+)?\\s{0,1})*$/;\n        return (\n          pattern.test(value) || \"Please use only numbers (e.g. 20 -2 0.2)\"\n        );\n      },\n    ],\n\n    protocolRules: [\n      (value) => {\n        const pattern = /^((?!(\\s)).)*$/;\n        return pattern.test(value) || \"Only one protocol is allowed\";\n      },\n    ],\n\n    selectedOption: \"Text\",\n    dialog: false,\n    dialogDelete: false,\n    filterText: \"\",\n    portProtocolText: \"\",\n    headers: [\n      { text: \"Category\", value: \"type\" },\n      { text: \"Filter\", value: \"filter\" },\n      { text: \"Actions\", value: \"actions\", sortable: false },\n    ],\n    options: [\"Text\", \"Port\", \"Comparison\"],\n  \n    textOptions: [\n      { text: \"Origin Host\", isActive: false, filterName: \"source\" },\n      { text: \"Responder Host\", isActive: false, filterName: \"target\" },\n      { text: \"Service\", isActive: false, filterName: \"service\" },\n      { text: \"Protocol\", isActive: false, filterName: \"proto\" },\n      { text: \"Query\", isActive: false, filterName: \"query_text\" },\n      { text: \"Query answers\", isActive: false, filterName: \"q_answers\" },\n      { text: \"Query type\", isActive: false, filterName: \"q_type\" },\n      { text: \"Error Code\", isActive: false, filterName: \"q_rcode\" },\n      { text: \"UID\", isActive: false, filterName: \"uid\" },\n      { text: \"Notice UID\", isActive: false, filterName: \"notice_uid\" },\n      { text: \"Notice Origin Host\", isActive: false, filterName: \"notice_source\" },\n      { text: \"Notice Resp Host\", isActive: false, filterName: \"notice_target\" },\n      { text: \"Notice Header\", isActive: false, filterName: \"notice_header\" },\n    ],\n\n    portOptions: [\n      { text: \"Responder Port\", isActive: false, filterName: \"resp_p\" },\n      { text: \"Origin Port\", isActive: false, filterName: \"origin_p\" },\n    ],\n    compOptions: [\n      {\n        text: \"Responder sent data in kb\",\n        isActive: false,\n        filterName: \"resp_ip_bytes\",\n      },\n      {\n        text: \"Origin sent data in kb\",\n        isActive: false,\n        filterName: \"orig_ip_bytes\",\n      },\n      { text: \"Duration\", isActive: false, filterName: \"duration\" },\n    ],\n    compOperators: {\n      activeOperator: -1,\n      operators: [\">\", \"<\", \"==\"],\n    },\n  }),\n  computed: {\n    filters() {\n      return this.$store.getters[\"allFilters\"];\n    },\n  },\n  watch: {\n    selectedOption() {\n      this.clearFilterDialogOptions();\n    },\n  },\n\n  methods: {\n    itemRowBackground: function (item) {\n      return item.isNegative ? \"red-text\" : \"\";\n    },\n    removeFilter(item) {\n      this.$store.dispatch(\"removeFilterByFilterName\", item);\n    },\n\n    removeAllFilters() {\n      this.$store.dispatch(\"removeAllFilters\");\n      this.dialogDelete = false;\n    },\n    sendFilterOption(option) {\n      const regex = /(\".*?\")|(\\S+)/g\n      var filters = []\n     \n      for (var match of this.filterText.matchAll(regex)){\n         var filter\n         if (match[1]) {\n            filter = match[1].replace(/^\"\\s*|\\s*\"$/g,\"\")\n          }\n          else {\n            filter = match[2].replace(/^\\s*|\\s*$/g,\"\")\n          }\n          filters.push(filter)\n      }\n      filters.forEach((filter) => {\n        if (this.selectedOption == \"Text\") {\n          this.textOptions.forEach((value) => {\n            if (value.isActive) {\n              this.$store.dispatch(option, {\n                type: value.filterName,\n                filter: filter,\n              });\n            }\n          });\n        }\n\n      else if (this.selectedOption == \"Port\") {\n          if (\n            !(\n              this.patternNumber.test(this.filterText) &&\n              this.patternProtocol.test(this.portProtocolText)\n            )\n          ) {\n            return;\n          }\n          this.portOptions.forEach((value) => {\n            if (value.isActive) {\n              var newFilter = filter;\n              if (this.portProtocolText != \"\") {\n                newFilter = (\n                  filter +\n                  \"/\" +\n                  this.portProtocolText\n                )\n              }\n              this.$store.dispatch(option, {\n                type: value.filterName,\n                filter: newFilter,\n              });\n            }\n          });\n        } else {\n          if (!this.patternNumber.test(filter)) {\n            return;\n          }\n          if (this.compOperators.activeOperator == -1) {\n            return;\n          }\n          this.compOptions.forEach((value) => {\n            if (value.isActive) {\n              var newFilter =\n                this.compOperators.operators[\n                  this.compOperators.activeOperator\n                ][0] + filter;\n              this.$store.dispatch(option, {\n                type: value.filterName,\n                filter: newFilter,\n              });\n            }\n          });\n        }\n        this.filterText = \"\";\n        this.portProtocolText = \"\";\n      });\n    },\n\n    addFilter() {\n      this.sendFilterOption(\"addFilter\");\n    },\n    addNegativeFilter() {\n      this.sendFilterOption(\"addNegativeFilter\");\n    },\n\n    close() {\n      this.dialog = false;\n      this.selectedOption = this.options[0];\n      this.setArrayInactive(this.textOptions);\n      this.clearFilterDialogOptions();\n    },\n    setOperator(index) {\n      if (index != this.compOperators.activeOperator) {\n        this.compOperators.activeOperator = index;\n      } else {\n        this.compOperators.activeOperator = -1;\n      }\n    },\n\n    clearFilterDialogOptions() {\n      if (this.selectedOption == \"Text\") {\n        this.setArrayInactive(this.portOptions);\n        this.setArrayInactive(this.compOptions);\n      } else if (this.selectedOption == \"Port\") {\n        this.setArrayInactive(this.textOptions);\n        this.setArrayInactive(this.compOptions);\n      } else {\n        this.setArrayInactive(this.textOptions);\n        this.setArrayInactive(this.portOptions);\n      }\n      this.filterText = \"\";\n      this.portProtocolText = \"\";\n    },\n    setArrayInactive(array) {\n      array.forEach((element) => {\n        element.isActive = false;\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.v-btn.opButton {\n  font-size: 1.5em;\n}\n>>> .red-text {\n  color: red;\n}\n>>>.v-data-table__wrapper {\n  overflow-y: auto;\n  overflow-x: auto;\n  max-height: 500px;\n}\n</style>\n"]}]}