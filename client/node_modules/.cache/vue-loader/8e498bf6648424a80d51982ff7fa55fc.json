{"remainingRequest":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/someone/projects/pythia/client/src/components/chartComponents/BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/someone/projects/pythia/client/src/components/chartComponents/BarChart.vue","mtime":1643631791384},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js","mtime":1643623769914},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js","mtime":1643623769500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAafile":"BarChart.vue","sourceRoot":"src/components/chartComponents","sourcesContent":["<template>\n  <v-card>\n    <ChartControls v-bind:chartNumber=\"chartNumber\" class=\"mb-0\" />\n    <v-progress-circular\n      v-if=\"loading && !isFrozen\"\n      indeterminate\n      color=\"success\"\n    ></v-progress-circular>\n    <svg :id=\"id\" viewBox=\"0 0 300 300\"></svg>\n  </v-card>\n</template>\n\n<script>\nimport ChartControls from \"../ChartControls.vue\";\nimport * as d3 from \"d3\";\nimport {\n  handleFilterClick,\n  isFiltered,\n} from \"../../helperFunctions/graphHelperFunctions\";\n\nexport default {\n  components: { ChartControls },\n  name: \"BarChart\",\n  props: {\n    data: {\n      required: true,\n    },\n    width: {\n      default: 300,\n      type: Number,\n    },\n    height: {\n      default: 300,\n      type: Number,\n    },\n    chartNumber: {\n      required: true,\n      type: Number,\n    },\n    isSummary: {\n      required: true,\n      type: Boolean,\n    },\n    isFrozen: {\n      required: true,\n      type: Boolean,\n    },\n  },\n  data: () => ({\n    margin: { top: 5, right: 10, bottom: 10, left: 35 },\n  }),\n  computed: {\n    id() {\n      return \"chart\" + this.chartNumber.toString();\n    },\n\n    filterSet() {\n      return this.$store.getters[\"filterByType\"](this.data.filterType);\n    },\n\n    negativeFilterSet() {\n      return this.$store.getters[\"negativeFilterByType\"](this.data.filterType);\n    },\n\n    payload() {\n      return this.data.payload;\n    },\n\n    loading() {\n      return this.data.loading;\n    },\n    chartWidth() {\n      return this.width - this.margin.left - this.margin.right;\n    },\n    chartHeight() {\n      return this.height - this.margin.top - this.margin.bottom;\n    },\n  },\n\n  watch: {\n    payload: function () {\n      if (this.isFrozen) {\n        return;\n      } else {\n        this.updateChart();\n      }\n    },\n\n    isFrozen() {\n      if (this.isFrozen) {\n        return;\n      } else {\n        this.updateChart();\n      }\n    },\n\n    filterSet: function () {\n      this.changeFilter();\n    },\n    negativeFilterSet: function () {\n      this.changeFilter();\n    },\n  },\n\n  mounted() {\n    this.createBarChart();\n    this.updateChart();\n  },\n\n  methods: {\n    /**\n     * Creates groups for chart\n     */\n    createBarChart() {\n      var svg = d3.select(\"#\" + this.id).append(\"g\");\n      svg.attr(\n        \"transform\",\n        \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\"\n      );\n      var content = svg.append(\"g\").attr(\"class\", \"content\" + this.chartNumber);\n      content.append(\"g\").attr(\"class\", \"axis\" + this.chartNumber);\n      content.append(\"g\").attr(\"class\", \"bars\" + this.chartNumber);\n      content.attr(\"transform\", \"translate(0,\" + this.chartHeight + \")\");\n      content\n        .select(\"g.axis\" + this.chartNumber)\n        .append(\"g\")\n        .attr(\"class\", \"yAxis\" + this.chartNumber);\n      content\n        .select(\"g.axis\" + this.chartNumber)\n        .append(\"g\")\n        .attr(\"class\", \"xAxis\" + this.chartNumber);\n      content\n        .append(\"g\")\n        .attr(\"class\", \"text\" + this.chartNumber)\n        .attr(\"fill\", \"white\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 9);\n    },\n\n    /**\n     * Inserts data to chart and creates chart objects\n     */\n    updateChart() {\n      const vm = this;\n\n      // configure x,y scaling\n      var scX = d3\n        .scaleBand()\n        .range([0, this.chartWidth])\n        .domain(\n          this.payload.map(function (d) {\n            return d.name;\n          })\n        )\n        .padding(0.1);\n\n      var scY = d3\n        .scaleLinear()\n        .range([0, -this.chartHeight])\n        .domain([\n          0,\n          1.1 *\n            d3.max(this.payload, function (d) {\n              return d.value;\n            }),\n        ]);\n\n      var barWidth = this.chartWidth / this.payload.length;\n\n      // create bars\n      var bars = d3\n        .select(\"g.bars\" + this.chartNumber)\n        .selectAll(\"rect\")\n        .data(this.payload);\n\n      bars\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"bar\" + this.chartNumber)\n        .attr(\"x\", function (d, i) {\n          return i * barWidth + 1;\n        })\n        .attr(\"y\", function (d) {\n          return scY(d.value);\n        })\n        .attr(\"height\", function (d) {\n          return -scY(d.value);\n        })\n        .attr(\"width\", barWidth - 5)\n        .style(\"fill\", function (d) {\n          if (isFiltered(d, vm)) {\n            return \"var(--v-tertiary-base)\";\n          }\n          return \"var(--v-primary-base)\";\n        })\n        .attr(\"opacity\", 0.8)\n        .on(\"click\", function (d, filter) {\n          //adds or removes filter\n          handleFilterClick(vm, filter);\n        });\n      //transition if data is updated\n      bars\n        .transition()\n        .duration(1000)\n        .attr(\"y\", function (d) {\n          return scY(d.value);\n        })\n        .attr(\"height\", function (d) {\n          return -scY(d.value);\n        })\n        .attr(\"x\", function (d, i) {\n          return i * barWidth + 1;\n        })\n        .attr(\"width\", barWidth - 1)\n        .attr(\"width\", barWidth - 5)\n        .style(\"fill\", function (d) {\n          if (isFiltered(d, vm)) {\n            return \"var(--v-tertiary-base)\";\n          }\n          return \"var(--v-primary-base)\";\n        });\n      //remove bars if mapped data is not available anymore\n      bars.exit().remove();\n\n      // create text\n      var text = d3\n        .select(\"g.text\" + this.chartNumber)\n        .selectAll(\"text\")\n        .data(this.payload);\n      text.enter();\n      text\n        .join(\"text\")\n        .attr(\"x\", 0)\n        .attr(\"y\", (d) => {\n          return scX(d.name) + scX.bandwidth() / 3;\n        })\n        .attr(\"dy\", \"0.35em\")\n        .attr(\"dx\", +4)\n        .style(\"fill\", \"var(--v-text-base)\")\n        .attr(\"transform\", \"rotate(270)\")\n        .text((d) => d.name)\n        //function to decide where to put text (in the bars or above them)\n        .call((text) =>\n          text\n            .filter((d) => scY(d.value) > -100)\n            .attr(\"x\", (d) => -scY(d.value))\n            .attr(\"dx\", +4)\n            .attr(\"text-anchor\", \"start\")\n        );\n\n      //remove text if mapped data is not available anymore\n      text.exit().remove();\n\n      //Draws axis if payload exists, otherwise deletes them\n      if (this.payload.length > 0) {\n        var xAxis = d3\n          .axisBottom(scX)\n          .tickFormat(() => {\n            return \"\";\n          })\n          .tickSize(0);\n        var yAxis = d3.axisLeft(scY).ticks(10, \"s\");\n\n        d3.select(\"g.yAxis\" + this.chartNumber).call(yAxis);\n\n        d3.select(\"g.xAxis\" + this.chartNumber).call(xAxis);\n      } else {\n        d3.select(\"g.yAxis\" + this.chartNumber)\n          .selectAll(\"*\")\n          .remove();\n        d3.select(\"g.xAxis\" + this.chartNumber)\n          .selectAll(\"*\")\n          .remove();\n      }\n    },\n\n    /**\n     * Checks if the color of the bars needs to be changed\n     */\n    changeFilter() {\n      const vm = this;\n      d3.select(\"g.bars\" + this.chartNumber)\n        .selectAll(\"rect\")\n        .style(\"fill\", function (d) {\n          if (isFiltered(d, vm)) {\n            return \"var(--v-tertiary-base)\";\n          }\n          return \"var(--v-primary-base)\";\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>"]}]}