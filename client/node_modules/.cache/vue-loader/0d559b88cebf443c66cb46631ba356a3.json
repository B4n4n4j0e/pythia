{"remainingRequest":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/someone/projects/pythia/client/src/components/ViewDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/someone/projects/pythia/client/src/components/ViewDialog.vue","mtime":1643574731425},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js","mtime":1643623769914},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js","mtime":1643623769500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgdmlld0RhdGFUb0NoYXJ0TmFtZSwKICB0eXBlRGF0YVRvU3RvcmVUeXBlRGF0YSwKfSBmcm9tICIuLi9oZWxwZXJGdW5jdGlvbnMvbGFiZWxIZWxwZXJGdW5jdGlvbiI7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcHV0ZWQ6IHsKICAgIGRhdGFPcHRpb25zKCkgewogICAgICB2YXIgcmVzdWx0ID0gWwogICAgICAgICJDb25uZWN0aW9ucyBwZXIgdGltZXVuaXQiLAogICAgICAgICJEYXRhIHZvbHVtZSBzdW1tYXJ5IiwKICAgICAgICAiRGF0YSB2b2x1bWUgcGVyIHRpbWV1bml0IiwKICAgICAgICAiRE5TIHF1ZXJpZXMgdG9wIGsiLAogICAgICAgICJPcmlnaW4gaG9zdHMgdG9wIGsiLAogICAgICAgICJQb3J0cyBvZiBpbnRlcmVzdCBzdW1tYXJ5IiwKICAgICAgICAiUHJvdG9jb2xzIHN1bW1hcnkiLAogICAgICAgICJSZXNwIGhvc3RzIHRvcCBrIiwKICAgICAgICAiUmVzcCBwb3J0cyB0b3AgayIsCiAgICAgICAgIlNlcnZpY2VzIHN1bW1hcnkiLAogICAgICBdOwogICAgICBpZiAodGhpcy5zZWxlY3RlZERhdGFUeXBlID09ICJTdW1tYXJ5IERhdGEiKSB7CiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQudW5zaGlmdCgKICAgICAgICAgICJDb25uZWN0aW9uIHRhYmxlIiwKICAgICAgICAgICJETlMgdGFibGUiLAogICAgICAgICAgIk5vdGljZSB0YWJsZSIKICAgICAgICApOwogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgIH0KICAgIH0sCgogICAgdmlld09wdGlvbnMoKSB7CiAgICAgIHZhciBzdW1tYXJpZXMgPSBbCiAgICAgICAgIkROUyBxdWVyaWVzIHRvcCBrIiwgCiAgICAgICAgIk9yaWdpbiBob3N0cyB0b3AgayIsCiAgICAgICAgIlJlc3AgaG9zdHMgdG9wIGsiLAogICAgICAgICJSZXNwIHBvcnRzIHRvcCBrIiwKICAgICAgICAiUG9ydHMgb2YgaW50ZXJlc3Qgc3VtbWFyeSIsCiAgICAgICAgIlByb3RvY29scyBzdW1tYXJ5IiwKICAgICAgICAiU2VydmljZXMgc3VtbWFyeSIsCiAgICAgICAgIkRhdGEgdm9sdW1lIHN1bW1hcnkiLAogICAgICBdOwogICAgICB2YXIgbGluZUNoYXJ0cyA9IFsKICAgICAgICAiQ29ubmVjdGlvbnMgcGVyIHRpbWV1bml0IiwKICAgICAgICAiRGF0YSB2b2x1bWUgcGVyIHRpbWV1bml0IiwKICAgICAgXTsKICAgICAgaWYgKHN1bW1hcmllcy5pbmNsdWRlcyh0aGlzLnNlbGVjdGVkRGF0YSkpIHsKICAgICAgICByZXR1cm4gWyJCYXIgY2hhcnQgaG9yaXpvbnRhbCIsICJCYXIgY2hhcnQgdmVydGljYWwiLCAiUGllIGNoYXJ0IiwgIlRyZWVNYXAiXTsKICAgICAgfSBlbHNlIGlmIChsaW5lQ2hhcnRzLmluY2x1ZGVzKHRoaXMuc2VsZWN0ZWREYXRhKSkgewogICAgICAgIHJldHVybiBbIkxpbmUgY2hhcnQiXTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGVjdGVkRGF0YSA9PSAiQ29ubmVjdGlvbiB0YWJsZSIpIHsKICAgICAgICByZXR1cm4gWyJDb25uZWN0aW9uIHRhYmxlIl07CiAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWxlY3RlZERhdGEgPT0gIkROUyB0YWJsZSIpIHsKICAgICAgICByZXR1cm4gWyJETlMgdGFibGUiXTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGVjdGVkRGF0YSA9PSAiTm90aWNlIHRhYmxlIil7CiAgICAgICAgcmV0dXJuIFsiTm90aWNlIHRhYmxlIl07CiAgICAgIH0KICAgICAgZWxzZSByZXR1cm4gW107CiAgICB9LAogICAgZGlhbG9nKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuZGlhbG9nOwogICAgfSwKICB9LAoKICB3YXRjaDogewogICAgZGlhbG9nOiBmdW5jdGlvbiAoKSB7CiAgICAgIGlmICh0aGlzLmRpYWxvZyA9PSBmYWxzZSkgewogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgic2V0RGlhbG9nIiwgZmFsc2UpOwogICAgICAgIGlmICh0aGlzLiRzdG9yZS5zdGF0ZS5kaWFsb2dJc1N1bW1hcnkpIHsKICAgICAgICAgIHRoaXMuc2VsZWN0ZWREYXRhVHlwZSA9ICJTdW1tYXJ5IERhdGEiOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnNlbGVjdGVkRGF0YVR5cGUgPSAiRGV0YWlsIERhdGEiOwogICAgICAgICAgdGhpcy5zZWxlY3RlZERhdGFzZXQgPSB0aGlzLiRzdG9yZS5zdGF0ZS5kaWFsb2dOYW1lOwogICAgICAgIH0KICAgICAgICB0aGlzLmRpYWxvZ1RpdGxlID0gIkVkaXQgVmlldyI7CiAgICAgICAgdGhpcy5zZWxlY3RlZERhdGEgPSB0aGlzLiRzdG9yZS5zdGF0ZS5kaWFsb2dEYXRhTGFiZWw7CiAgICAgICAgdGhpcy5zZWxlY3RlZFZpZXcgPSB0aGlzLiRzdG9yZS5zdGF0ZS5kaWFsb2dWaWV3TGFiZWw7CiAgICAgICAgdGhpcy53aW5kb3dXaWR0aCA9IHRoaXMuJHN0b3JlLnN0YXRlLmRpYWxvZ0NvbHM7CiAgICAgICAgdGhpcy5kaWFsb2dCb29sID0gdHJ1ZTsKCiAgICAgIH0KICAgIH0sCiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgZGlhbG9nQm9vbDogZmFsc2UsCiAgICBkaWFsb2dUaXRsZTogIkFkZCB2aWV3IiwKICAgIHNlbGVjdGVkRGF0YVR5cGU6ICIiLAogICAgc2VsZWN0ZWRWaWV3OiAiIiwKICAgIHNlbGVjdGVkRGF0YTogIiIsCiAgICB3aW5kb3dXaWR0aDogNiwKICB9KSwKICBtZXRob2RzOiB7CgogICAgY2xvc2VEaWFsb2coKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWREYXRhVHlwZSA9ICIiOwogICAgICB0aGlzLnNlbGVjdGVkVmlldyA9ICIiOwogICAgICB0aGlzLmRpYWxvZ1RpdGxlID0gIkFkZCB2aWV3IjsKICAgICAgdGhpcy5zZWxlY3RlZERhdGEgPSAiIjsKICAgICAgdGhpcy5kaWFsb2dCb29sID0gZmFsc2U7CiAgICB9LAoKCiAgICBzYXZlVmlldygpIHsKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWREYXRhVHlwZSA9PSIiIHx8IHRoaXMuc2VsZWN0ZWRWaWV3ID09ICIiIHx8ICAgdGhpcy5zZWxlY3RlZERhdGEgPT0gIiIpIHsKICAgICAgICByZXR1cm4KICAgICAgfQogICAgICB2YXIgc3VtbWFyeQogICAgICBpZiAodGhpcy5zZWxlY3RlZERhdGFUeXBlID09ICdTdW1tYXJ5IERhdGEnKXsKICAgICAgICBzdW1tYXJ5ID0gdHJ1ZQogICAgICB9CiAgICAgIGVsc2UgewogICAgICAgIHN1bW1hcnkgPSBmYWxzZSAKICAgICAgfQogICAgICB2YXIgdmlld0RhdGEgPSB7CiAgICAgICAgdmlldzogdmlld0RhdGFUb0NoYXJ0TmFtZSh0aGlzLnNlbGVjdGVkVmlldyksCiAgICAgICAgdHlwZTogdHlwZURhdGFUb1N0b3JlVHlwZURhdGEodGhpcy5zZWxlY3RlZERhdGEpLAogICAgICAgIGRhdGFMYWJlbDogdGhpcy5zZWxlY3RlZERhdGEsCiAgICAgICAgdmlld0xhYmVsOiB0aGlzLnNlbGVjdGVkVmlldywKICAgICAgICBjb2xzOiB0aGlzLndpbmRvd1dpZHRoLAogICAgICAgIGlzU3VtbWFyeTogc3VtbWFyeSwKICAgICAgICBpc0Zyb3plbjogZmFsc2UKICAgICAgfTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImFkZFZpZXciLCB2aWV3RGF0YSk7CiAgICAgIHRoaXMuY2xvc2VEaWFsb2coKTsKICAgIH0sCgogICAgdXBkYXRlVmlldygpIHsKICAgICAgIGlmICh0aGlzLnNlbGVjdGVkRGF0YVR5cGUgPT0iIiB8fCB0aGlzLnNlbGVjdGVkVmlldyA9PSAiIiB8fCAgIHRoaXMuc2VsZWN0ZWREYXRhID09ICIiKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgdmFyIHN1bW1hcnkKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWREYXRhVHlwZSA9PSAnU3VtbWFyeSBEYXRhJyl7CiAgICAgICAgc3VtbWFyeSA9IHRydWUKICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICBzdW1tYXJ5ID0gZmFsc2UgCiAgICAgIH0gICAgCiAgICAgIHZhciB2aWV3RGF0YSA9IHsKICAgICAgICBpZDogdGhpcy4kc3RvcmUuc3RhdGUuZGlhbG9nQ2hhcnROdW1iZXIsCiAgICAgICAgdmlldzogdmlld0RhdGFUb0NoYXJ0TmFtZSh0aGlzLnNlbGVjdGVkVmlldyksCiAgICAgICAgdHlwZTogdHlwZURhdGFUb1N0b3JlVHlwZURhdGEodGhpcy5zZWxlY3RlZERhdGEpLAogICAgICAgIGRhdGFMYWJlbDogdGhpcy5zZWxlY3RlZERhdGEsCiAgICAgICAgdmlld0xhYmVsOiB0aGlzLnNlbGVjdGVkVmlldywKICAgICAgICBjb2xzOiB0aGlzLndpbmRvd1dpZHRoLAogICAgICAgIGlzU3VtbWFyeTogc3VtbWFyeSwKICAgICAgICBpc0Zyb3plbjogdGhpcy4kc3RvcmUuc3RhdGUuZGlhbG9nSXNGcm96ZW4KICAgICAgfTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goInVwZGF0ZVZpZXciLCB2aWV3RGF0YSk7CiAgICAgIHRoaXMuY2xvc2VEaWFsb2coKTsKICAgICAgCiAgICB9LAoKCiAgfSwKfTsK"},{"version":3,"sources":["ViewDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"ViewDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container class=\"mt-4\" fluid>\n    <v-row justify=\"center\">\n      <v-dialog v-model=\"dialogBool\" persistent max-width=\"600px\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn dark v-bind=\"attrs\" v-on=\"on\" class=\"mx-2\" fab color=\"primary\">\n            <v-icon dark> mdi-plus </v-icon>\n          </v-btn>\n        </template>\n        <v-card>\n          <v-card-title>\n            <span class=\"text-h5\">{{ dialogTitle }}</span>\n          </v-card-title>\n          <v-card-text>\n            <v-container>\n              <v-row>\n                <v-col>\n                  <v-select\n                    v-model=\"selectedDataType\"\n                    :items=\"['Summary Data', 'Detail Data']\"\n                    label=\"Data type*\"\n                    required\n                  ></v-select>\n                </v-col>\n              <v-col cols=\"12\" sm=\"6\">\n                  <v-select\n                    v-model=\"selectedData\"\n                    :disabled=\"selectedDataType == ''\"\n                    :items=\"dataOptions\"\n                    label=\"Choose data*\"\n                    required\n                  ></v-select>\n                </v-col>\n              </v-row>\n              <v-row>\n                <v-col cols=\"12\" sm=\"6\">\n                  <v-select\n                    v-model=\"selectedView\"\n                    :disabled=\"selectedData == ''\"\n                    :items=\"viewOptions\"\n                    label=\"Choose view*\"\n                    required\n                  ></v-select> \n                </v-col>\n                <v-col cols=\"3\">\n                  <v-select\n                    v-model=\"windowWidth\"\n                    :items=\"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\"\n                    label=\"Width*\"\n                    required\n                  ></v-select>\n                </v-col> \n              </v-row>\n            </v-container>\n            <small>*indicates required field</small>\n          </v-card-text> \n          <v-card-actions>\n            <v-spacer></v-spacer>\n\n            <v-btn color=\"primary\" text @click=\"closeDialog\"> Close </v-btn>\n            <v-btn\n              color=\"primary\"\n              :disabled=\"!viewOptions.includes(selectedView)\"\n              text\n              v-on=\"\n                dialogTitle == 'Add view'\n                  ? { click: () => saveView() }\n                  : { click: () => updateView() }\n              \"\n            >\n              Save\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport {\n  viewDataToChartName,\n  typeDataToStoreTypeData,\n} from \"../helperFunctions/labelHelperFunction\";\n\nexport default {\n  computed: {\n    dataOptions() {\n      var result = [\n        \"Connections per timeunit\",\n        \"Data volume summary\",\n        \"Data volume per timeunit\",\n        \"DNS queries top k\",\n        \"Origin hosts top k\",\n        \"Ports of interest summary\",\n        \"Protocols summary\",\n        \"Resp hosts top k\",\n        \"Resp ports top k\",\n        \"Services summary\",\n      ];\n      if (this.selectedDataType == \"Summary Data\") {\n        return result;\n      } else {\n        result.unshift(\n          \"Connection table\",\n          \"DNS table\",\n          \"Notice table\"\n        );\n        return result;\n      }\n    },\n\n    viewOptions() {\n      var summaries = [\n        \"DNS queries top k\", \n        \"Origin hosts top k\",\n        \"Resp hosts top k\",\n        \"Resp ports top k\",\n        \"Ports of interest summary\",\n        \"Protocols summary\",\n        \"Services summary\",\n        \"Data volume summary\",\n      ];\n      var lineCharts = [\n        \"Connections per timeunit\",\n        \"Data volume per timeunit\",\n      ];\n      if (summaries.includes(this.selectedData)) {\n        return [\"Bar chart horizontal\", \"Bar chart vertical\", \"Pie chart\", \"TreeMap\"];\n      } else if (lineCharts.includes(this.selectedData)) {\n        return [\"Line chart\"];\n      } else if (this.selectedData == \"Connection table\") {\n        return [\"Connection table\"];\n      } else if (this.selectedData == \"DNS table\") {\n        return [\"DNS table\"];\n      } else if (this.selectedData == \"Notice table\"){\n        return [\"Notice table\"];\n      }\n      else return [];\n    },\n    dialog() {\n      return this.$store.state.dialog;\n    },\n  },\n\n  watch: {\n    dialog: function () {\n      if (this.dialog == false) {\n        return;\n      } else {\n        this.$store.dispatch(\"setDialog\", false);\n        if (this.$store.state.dialogIsSummary) {\n          this.selectedDataType = \"Summary Data\";\n        } else {\n          this.selectedDataType = \"Detail Data\";\n          this.selectedDataset = this.$store.state.dialogName;\n        }\n        this.dialogTitle = \"Edit View\";\n        this.selectedData = this.$store.state.dialogDataLabel;\n        this.selectedView = this.$store.state.dialogViewLabel;\n        this.windowWidth = this.$store.state.dialogCols;\n        this.dialogBool = true;\n\n      }\n    },\n  },\n  data: () => ({\n    dialogBool: false,\n    dialogTitle: \"Add view\",\n    selectedDataType: \"\",\n    selectedView: \"\",\n    selectedData: \"\",\n    windowWidth: 6,\n  }),\n  methods: {\n\n    closeDialog() {\n      this.selectedDataType = \"\";\n      this.selectedView = \"\";\n      this.dialogTitle = \"Add view\";\n      this.selectedData = \"\";\n      this.dialogBool = false;\n    },\n\n\n    saveView() {\n      if (this.selectedDataType ==\"\" || this.selectedView == \"\" ||   this.selectedData == \"\") {\n        return\n      }\n      var summary\n      if (this.selectedDataType == 'Summary Data'){\n        summary = true\n      }\n      else {\n        summary = false \n      }\n      var viewData = {\n        view: viewDataToChartName(this.selectedView),\n        type: typeDataToStoreTypeData(this.selectedData),\n        dataLabel: this.selectedData,\n        viewLabel: this.selectedView,\n        cols: this.windowWidth,\n        isSummary: summary,\n        isFrozen: false\n      };\n      this.$store.dispatch(\"addView\", viewData);\n      this.closeDialog();\n    },\n\n    updateView() {\n       if (this.selectedDataType ==\"\" || this.selectedView == \"\" ||   this.selectedData == \"\") {\n        return\n      }\n      var summary\n      if (this.selectedDataType == 'Summary Data'){\n        summary = true\n      }\n      else {\n        summary = false \n      }    \n      var viewData = {\n        id: this.$store.state.dialogChartNumber,\n        view: viewDataToChartName(this.selectedView),\n        type: typeDataToStoreTypeData(this.selectedData),\n        dataLabel: this.selectedData,\n        viewLabel: this.selectedView,\n        cols: this.windowWidth,\n        isSummary: summary,\n        isFrozen: this.$store.state.dialogIsFrozen\n      };\n      this.$store.dispatch(\"updateView\", viewData);\n      this.closeDialog();\n      \n    },\n\n\n  },\n};\n</script>"]}]}