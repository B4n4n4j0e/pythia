{"remainingRequest":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/someone/projects/pythia/client/src/components/chartComponents/BarChartHorizontal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/someone/projects/pythia/client/src/components/chartComponents/BarChartHorizontal.vue","mtime":1644593501776},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js","mtime":1643623769914},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js","mtime":1643623769500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BarChartHorizontal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"BarChartHorizontal.vue","sourceRoot":"src/components/chartComponents","sourcesContent":["<template>\n  <v-card>\n    <ChartControls\n      v-bind:data=\"data\"\n      v-bind:chartNumber=\"chartNumber\"\n      class=\"mb-0\"\n    />\n    <v-progress-circular\n      v-if=\"loading && !isFrozen\"\n      indeterminate\n      color=\"primary\"\n    ></v-progress-circular>\n    <svg :id=\"id\" viewBox=\"0 0 660 500\"></svg>\n  </v-card>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport ChartControls from \"../ChartControls.vue\";\nimport {\n  handleFilterClick,\n  isFiltered,\n} from \"../../helperFunctions/graphHelperFunctions\";\nexport default {\n  components: { ChartControls },\n  name: \"HorizontalBarChart\",\n  props: {\n    data: {\n      required: true,\n    },\n    width: {\n      default: 600,\n      type: Number,\n    },\n    height: {\n      default: 450,\n      type: Number,\n    },\n    chartNumber: {\n      required: true,\n      type: Number,\n    },\n    isSummary: {\n      required: true,\n      type: Boolean,\n    },\n    isFrozen: {\n      required: true,\n      type: Boolean,\n    },\n  },\n  data: () => ({}),\n\n  computed: {\n    id() {\n      return \"chart\" + this.chartNumber.toString();\n    },\n\n    filterSet() {\n      return this.$store.getters[\"filterByType\"](this.data.filterType);\n    },\n\n    negativeFilterSet() {\n      return this.$store.getters[\"negativeFilterByType\"](this.data.filterType);\n    },\n\n    payload() {\n      return this.data.payload;\n    },\n    loading() {\n      return this.data.loading;\n    },\n  },\n  watch: {\n    payload: function () {\n      if (this.isFrozen) {\n        return;\n      } else {\n        this.updateChart();\n      }\n    },\n\n    isFrozen() {\n      if (this.isFrozen) {\n        return;\n      } else {\n        this.updateChart();\n      }\n    },\n\n    filterSet: function () {\n      this.changeFilter();\n    },\n    negativeFilterSet: function () {\n      this.changeFilter();\n    },\n  },\n\n  mounted() {\n    this.createBarChart();\n    this.updateChart();\n  },\n\n  methods: {\n    /**\n     * Creates groups for chart\n     */\n    createBarChart() {\n      var margin = { top: 0, right: 20, bottom: 10, left: 10 },\n        svg = d3.select(\"#\" + this.id).append(\"g\");\n      svg.append(\"g\").attr(\"class\", \"bars\" + this.chartNumber);\n      svg.append(\"g\").attr(\"class\", \"xAxis\" + this.chartNumber);\n      svg.append(\"g\").attr(\"class\", \"yAxis\" + this.chartNumber);\n\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"text\" + this.chartNumber)\n        .attr(\"fill\", \"white\")\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 12);\n\n      svg.attr(\n        \"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\"\n      );\n    },\n\n    /**\n     * Inserts data to chart and creates chart objects\n     */\n    updateChart() {\n      var svg = d3.select(\"#\" + this.id);\n\n      // configure x,y scaling\n      var scX = d3\n        .scaleLinear()\n        .range([0, this.width])\n        .domain([\n          0,\n          1.05 *\n            d3.max(this.payload, function (d) {\n              return d.value;\n            }),\n        ]);\n\n      var scY = d3\n        .scaleBand()\n        .range([0, this.height])\n        .padding(0.1)\n        .domain(\n          this.payload.map(function (d) {\n            return d.name;\n          })\n        );\n      const vm = this;\n\n      // create bars\n      var bar = svg\n        .select(\"g.bars\" + this.chartNumber)\n        .selectAll(\"rect\")\n        .data(this.payload);\n      bar\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"bar\" + this.chartNumber)\n        .attr(\"width\", function (d) {\n          return scX(d.value);\n        })\n        .attr(\"y\", function (d) {\n          return scY(d.name);\n        })\n        .attr(\"height\", scY.bandwidth())\n        .style(\"fill\", function (d) {\n          if (isFiltered(d, vm)) {\n            return \"var(--v-tertiary-base)\";\n          }\n          return \"var(--v-primary-base)\";\n        })\n        .on(\"click\", function (d, filter) {\n          //add or removes filter\n          handleFilterClick(vm, filter);\n        });\n\n      //transition if data is updated\n      bar\n        .transition()\n        .duration(1000)\n        .style(\"fill\", function (d) {\n          if (isFiltered(d, vm)) {\n            return \"var(--v-tertiary-base)\";\n          }\n          return \"var(--v-primary-base)\";\n        })\n        .attr(\"width\", function (d) {\n          return scX(d.value);\n        })\n        .attr(\"y\", function (d) {\n          return scY(d.name);\n        })\n        .attr(\"height\", scY.bandwidth());\n\n      //remove bars if mapped data is not available anymore\n      bar.exit().remove();\n\n      // create text\n      var text = svg\n        .select(\"g.text\" + this.chartNumber)\n        .selectAll(\"text\")\n        .data(this.payload);\n      text.enter();\n      text\n        .join(\"text\")\n        .attr(\"x\", 0)\n        .attr(\"y\", (d) => scY(d.name) + scY.bandwidth() / 2)\n        .attr(\"dy\", \"0.35em\")\n        .attr(\"dx\", +4)\n        .style(\"fill\", \"var(--v-text-base)\")\n        .text((d) => d.name)\n        .call((text) =>\n          text\n            .filter((d) => scY(d.value) - scY(0) > 250) // short bars\n            .attr(\"x\", (d) => scX(d.value))\n            .attr(\"dx\", +4)\n            .attr(\"text-anchor\", \"start\")\n        );\n\n      //remove text if mapped data is not available anymore\n      text.exit().remove();\n\n      //Draws axis if payload exists, otherwise deletes them\n      if (this.payload.length > 0) {\n        d3.select(\"g.xAxis\" + this.chartNumber)\n          .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n          .call(d3.axisBottom(scX).ticks(10, \"s\"));\n\n        d3.select(\"g.yAxis\" + this.chartNumber).call(\n          d3\n            .axisLeft(scY)\n            .tickFormat(() => {\n              return \"\";\n            })\n            .tickSize(0)\n        );\n      } else {\n        d3.select(\"g.yAxis\" + this.chartNumber)\n          .selectAll(\"*\")\n          .remove();\n        d3.select(\"g.xAxis\" + this.chartNumber)\n          .selectAll(\"*\")\n          .remove();\n      }\n    },\n\n    /**\n     * Checks if the color of the bars needs to be changed\n     */\n    changeFilter() {\n      const vm = this;\n      d3.select(\"g.bars\" + this.chartNumber)\n        .selectAll(\"rect\")\n        .style(\"fill\", function (d) {\n          if (isFiltered(d, vm)) {\n            return \"var(--v-tertiary-base)\";\n          }\n          return \"var(--v-primary-base)\";\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n</style>"]}]}