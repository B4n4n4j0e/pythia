{"remainingRequest":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js!/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/someone/projects/pythia/client/src/components/chartComponents/TreeMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/someone/projects/pythia/client/src/components/chartComponents/TreeMap.vue","mtime":1643631811706},{"path":"/home/someone/projects/pythia/client/babel.config.js","mtime":1640282409286},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js","mtime":1643623769914},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js","mtime":1643623769500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKaW1wb3J0IENoYXJ0Q29udHJvbHMgZnJvbSAiLi4vQ2hhcnRDb250cm9scy52dWUiOwppbXBvcnQgeyBoYW5kbGVGaWx0ZXJDbGljaywgaXNGaWx0ZXJlZCwgbkZvcm1hdHRlciB9IGZyb20gIi4uLy4uL2hlbHBlckZ1bmN0aW9ucy9ncmFwaEhlbHBlckZ1bmN0aW9ucyI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBDaGFydENvbnRyb2xzOiBDaGFydENvbnRyb2xzCiAgfSwKICBuYW1lOiAiVHJlZU1hcCIsCiAgcHJvcHM6IHsKICAgIGRhdGE6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICB3aWR0aDogewogICAgICBkZWZhdWx0OiA2NjAsCiAgICAgIHR5cGU6IE51bWJlcgogICAgfSwKICAgIGhlaWdodDogewogICAgICBkZWZhdWx0OiA1MDAsCiAgICAgIHR5cGU6IE51bWJlcgogICAgfSwKICAgIGNoYXJ0TnVtYmVyOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBOdW1iZXIKICAgIH0sCiAgICBpc1N1bW1hcnk6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IEJvb2xlYW4KICAgIH0sCiAgICBpc0Zyb3plbjogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogQm9vbGVhbgogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1hcmdpbjogewogICAgICAgIHRvcDogMTAsCiAgICAgICAgcmlnaHQ6IDEwLAogICAgICAgIGJvdHRvbTogMCwKICAgICAgICBsZWZ0OiAxMAogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlkOiBmdW5jdGlvbiBpZCgpIHsKICAgICAgcmV0dXJuICJjaGFydCIgKyB0aGlzLmNoYXJ0TnVtYmVyLnRvU3RyaW5nKCk7CiAgICB9LAogICAgdG9vbHRpcElkOiBmdW5jdGlvbiB0b29sdGlwSWQoKSB7CiAgICAgIHJldHVybiAidG9vbHRpcCIgKyB0aGlzLmNoYXJ0TnVtYmVyLnRvU3RyaW5nKCk7CiAgICB9LAogICAgZmlsdGVyU2V0OiBmdW5jdGlvbiBmaWx0ZXJTZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWyJmaWx0ZXJCeVR5cGUiXSh0aGlzLmRhdGEuZmlsdGVyVHlwZSk7CiAgICB9LAogICAgbmVnYXRpdmVGaWx0ZXJTZXQ6IGZ1bmN0aW9uIG5lZ2F0aXZlRmlsdGVyU2V0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1sibmVnYXRpdmVGaWx0ZXJCeVR5cGUiXSh0aGlzLmRhdGEuZmlsdGVyVHlwZSk7CiAgICB9LAogICAgcGF5bG9hZDogZnVuY3Rpb24gcGF5bG9hZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuZGF0YS5wYXlsb2FkOwogICAgfSwKICAgIGxvYWRpbmc6IGZ1bmN0aW9uIGxvYWRpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLmRhdGEubG9hZGluZzsKICAgIH0sCiAgICBjaGFydFdpZHRoOiBmdW5jdGlvbiBjaGFydFdpZHRoKCkgewogICAgICByZXR1cm4gdGhpcy53aWR0aCAtIHRoaXMubWFyZ2luLmxlZnQgLSB0aGlzLm1hcmdpbi5yaWdodDsKICAgIH0sCiAgICBjaGFydEhlaWdodDogZnVuY3Rpb24gY2hhcnRIZWlnaHQoKSB7CiAgICAgIHJldHVybiB0aGlzLmhlaWdodCAtIHRoaXMubWFyZ2luLnRvcCAtIHRoaXMubWFyZ2luLmJvdHRvbTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBwYXlsb2FkOiBmdW5jdGlvbiBwYXlsb2FkKCkgewogICAgICBpZiAodGhpcy5pc0Zyb3plbikgewogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICAgIH0KICAgIH0sCiAgICBpc0Zyb3plbjogZnVuY3Rpb24gaXNGcm96ZW4oKSB7CiAgICAgIGlmICh0aGlzLmlzRnJvemVuKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudXBkYXRlQ2hhcnQoKTsKICAgICAgfQogICAgfSwKICAgIGZpbHRlclNldDogZnVuY3Rpb24gZmlsdGVyU2V0KCkgewogICAgICB0aGlzLmNoYW5nZUZpbHRlcigpOwogICAgfSwKICAgIG5lZ2F0aXZlRmlsdGVyU2V0OiBmdW5jdGlvbiBuZWdhdGl2ZUZpbHRlclNldCgpIHsKICAgICAgdGhpcy5jaGFuZ2VGaWx0ZXIoKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmNyZWF0ZVRyZWVNYXAoKTsKICAgIHRoaXMudXBkYXRlQ2hhcnQoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICogQ3JlYXRlcyBncm91cHMgZm9yIGNoYXJ0CiAgICAgKi8KICAgIGNyZWF0ZVRyZWVNYXA6IGZ1bmN0aW9uIGNyZWF0ZVRyZWVNYXAoKSB7CiAgICAgIHZhciBzdmcgPSBkMy5zZWxlY3QoIiMiICsgdGhpcy5pZCkuYXBwZW5kKCJnIik7CiAgICAgIHN2Zy5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsICJyZWN0cyIpOwogICAgICBzdmcuYXBwZW5kKCJnIikuYXR0cigiY2xhc3MiLCAiZm9yZWlnbk9iamVjdHMiKTsKICAgICAgc3ZnLmF0dHIoInRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoIiArIHRoaXMubWFyZ2luLmxlZnQgKyAiLCIgKyB0aGlzLm1hcmdpbi50b3AgKyAiKSIpOwogICAgfSwKCiAgICAvKioKICAgICAqIEluc2VydHMgZGF0YSB0byBjaGFydCBhbmQgY3JlYXRlcyBjaGFydCBvYmplY3RzCiAgICAgKi8KICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgiIyIgKyB0aGlzLmlkKTsKICAgICAgdmFyIHRvb2x0aXAgPSBkMy5zZWxlY3QoIiMiICsgdGhpcy50b29sdGlwSWQpOyAvLyBjaGVja3MgaWYgZGF0YSBleGlzdHMsIGlmIG5vdCByZW1vdmVzIFRyZWUgZWxlbWVudHMKCiAgICAgIGlmICh0aGlzLnBheWxvYWQubGVuZ3RoID09IDApIHsKICAgICAgICBzdmcuc2VsZWN0QWxsKCJyZWN0IikucmVtb3ZlKCk7CiAgICAgICAgc3ZnLnNlbGVjdEFsbCgiZm9yZWlnbk9iamVjdCIpLnJlbW92ZSgpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIHZtID0gdGhpczsgLy8gY3JlYXRlcyB0cmVlIGhpZXJhcmNoeSBmcm9tIGRhdGEKCiAgICAgIHZhciBoaWVyYXJjaHkgPSBkMy5oaWVyYXJjaHkodGhpcy5wYXlsb2FkLCBmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHJldHVybiBub2RlOwogICAgICB9KS5zdW0oZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICByZXR1cm4gbm9kZVsidmFsdWUiXTsKICAgICAgfSk7IC8vIHNldHMgY29sb3Igc2NhbGUKCiAgICAgIHZhciBjb2xvciA9IGQzLnNjYWxlT3JkaW5hbCgpLmRvbWFpbih0aGlzLnBheWxvYWQubWFwKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQubmFtZTsKICAgICAgfSkpLnJhbmdlKFsidmFyKC0tdi1wcmltYXJ5LWJhc2UpIiwgInZhcigtLXYtc2Vjb25kYXJ5LWJhc2UpIiwgInZhcigtLXYtdGVydGlhcnktYmFzZSkiXSk7IC8vIGNyZWF0ZSB0cmVlbWFwCgogICAgICB2YXIgdHJlZW1hcCA9IGQzLnRyZWVtYXAoKS5zaXplKFt0aGlzLmNoYXJ0V2lkdGgsIHRoaXMuY2hhcnRIZWlnaHRdKS5wYWRkaW5nKDEpLnJvdW5kKHRydWUpOwogICAgICB0cmVlbWFwKGhpZXJhcmNoeSk7CiAgICAgIHZhciB0aWxlcyA9IGhpZXJhcmNoeS5sZWF2ZXMoKTsKICAgICAgdmFyIGJsb2NrID0gc3ZnLnNlbGVjdCgiZy5yZWN0cyIpLnNlbGVjdEFsbCgicmVjdCIpLmRhdGEodGlsZXMpOyAvLyBjcmVhdGUgYmxvY2tzCgogICAgICBibG9jay5lbnRlcigpLmluc2VydCgicmVjdCIpLmF0dHIoInRyYW5zZm9ybSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuICJ0cmFuc2xhdGUoIi5jb25jYXQoZC54MCwgIiwiKS5jb25jYXQoZC55MCwgIikiKTsKICAgICAgfSkuYXR0cigib3BhY2l0eSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgaWYgKCF2bS5maWx0ZXJTZXQgfHwgdm0uZmlsdGVyU2V0LnNpemUgPT0gMCAmJiB2bS5uZWdhdGl2ZUZpbHRlclNldC5zaXplID09IDAgfHwgaXNGaWx0ZXJlZChkLmRhdGEsIHZtKSkgewogICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiAwLjU7CiAgICAgICAgfQogICAgICB9KS5hdHRyKCJmaWxsIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gY29sb3IoZC5kYXRhLm5hbWUpOwogICAgICB9KS5hdHRyKCJ3aWR0aCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQueDEgLSBkLngwOwogICAgICB9KS5hdHRyKCJoZWlnaHQiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLnkxIC0gZC55MDsKICAgICAgfSk7IC8vdHJhbnNpdGlvbiBpZiBkYXRhIGlzIHVwZGF0ZWQKCiAgICAgIGJsb2NrLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMDAwKS5hdHRyKCJ0cmFuc2Zvcm0iLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiAidHJhbnNsYXRlKCIuY29uY2F0KGQueDAsICIsIikuY29uY2F0KGQueTAsICIpIik7CiAgICAgIH0pLmF0dHIoIndpZHRoIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC54MSAtIGQueDA7CiAgICAgIH0pLmF0dHIoIm9wYWNpdHkiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIGlmICghdm0uZmlsdGVyU2V0IHx8IHZtLmZpbHRlclNldC5zaXplID09IDAgJiYgdm0ubmVnYXRpdmVGaWx0ZXJTZXQuc2l6ZSA9PSAwIHx8IGlzRmlsdGVyZWQoZC5kYXRhLCB2bSkpIHsKICAgICAgICAgIHJldHVybiAxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gMC41OwogICAgICAgIH0KICAgICAgfSkuYXR0cigiaGVpZ2h0IiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC55MSAtIGQueTA7CiAgICAgIH0pOyAvL3JlbW92ZSBibG9ja3MgaWYgbWFwcGVkIGRhdGEgaXMgbm90IGF2YWlsYWJsZSBhbnltb3JlCgogICAgICBibG9jay5leGl0KCkucmVtb3ZlKCk7IC8vIGNyZWF0ZXMgdGV4dCBibG9ja3Mgb3ZlcmxheWluZyB0aWxlcwoKICAgICAgdmFyIHRleHQgPSBzdmcuc2VsZWN0KCJnLmZvcmVpZ25PYmplY3RzIikuc2VsZWN0QWxsKCJmb3JlaWduT2JqZWN0IikuZGF0YSh0aWxlcyk7CiAgICAgIHRleHQuZW50ZXIoKS5pbnNlcnQoImZvcmVpZ25PYmplY3QiKS5hdHRyKCJ4IiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC54MDsKICAgICAgfSkuYXR0cigieSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQueTA7CiAgICAgIH0pLmF0dHIoIndpZHRoIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC54MSAtIGQueDA7CiAgICAgIH0pLmF0dHIoImhlaWdodCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQueTEgLSBkLnkwOwogICAgICB9KS5zdHlsZSgiZmlsbCIsICJ2YXIoLS12LXRleHQtYmFzZSkiKS5odG1sKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgdmFyIHZhbHVlID0gZC5kYXRhLnZhbHVlLnRvU3RyaW5nKCkucmVwbGFjZSgvXEIoPz0oZHszfSkrKD8hXGQpKS9nLCAiLCIpOwogICAgICAgIHJldHVybiAiPGRpdj48cD4iICsgZC5kYXRhLm5hbWUgKyAiIHwgIiArIG5Gb3JtYXR0ZXIodmFsdWUsIDIpICsgIiB8ICIgKyAodmFsdWUgLyBkLnBhcmVudC52YWx1ZSAqIDEwMCkudG9GaXhlZCgxKSArICIgJTwvcD48L2Rpdj4iOwogICAgICB9KSAvLyBhY3RpdmF0ZSB0b29sdGlwCiAgICAgIC5vbigibW91c2VvdmVyIiwgZnVuY3Rpb24gKGV2ZW50LCBkKSB7CiAgICAgICAgdmFyIHN2Z0RpbSA9IHN2Zy5ub2RlKCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CiAgICAgICAgdmFyIGhlaWdodCA9IHN2Z0RpbS5oZWlnaHQgLyB2bS5oZWlnaHQgKiBkLnkwOwogICAgICAgIHZhciB3aWR0aCA9IHN2Z0RpbS53aWR0aCAvIHZtLndpZHRoICogZC54MDsKICAgICAgICB2YXIgdmFsdWUgPSBkLmRhdGEudmFsdWUudG9TdHJpbmcoKS5yZXBsYWNlKC9cQig/PShkezN9KSsoPyFcZCkpL2csICIsIik7CiAgICAgICAgdG9vbHRpcC50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuc3R5bGUoIm9wYWNpdHkiLCAwLjgpOwogICAgICAgIHRvb2x0aXAuaHRtbCgnPHAgY2xhc3M9InN1YnRpdGxlLTIgd2hpdGUtLXRleHQiPicgKyBkLmRhdGEubmFtZSArICIgfCAiICsgbkZvcm1hdHRlcih2YWx1ZSwgMikgKyAiIHwgIiArICh2YWx1ZSAvIGQucGFyZW50LnZhbHVlICogMTAwKS50b0ZpeGVkKDEpICsgIiAlPC9wPiIpLnN0eWxlKCJsZWZ0Iiwgd2lkdGggKyAicHgiKS5zdHlsZSgidG9wIiwgaGVpZ2h0ICsgInB4Iik7CiAgICAgIH0pLm9uKCJtb3VzZW91dCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICB0b29sdGlwLnRyYW5zaXRpb24oKS5kdXJhdGlvbig1MDApLnN0eWxlKCJvcGFjaXR5IiwgMCk7CiAgICAgIH0pIC8vIGFkZHMgb3IgcmVtb3ZlcyBmaWx0ZXIKICAgICAgLm9uKCJjbGljayIsIGZ1bmN0aW9uIChkLCBmaWx0ZXIpIHsKICAgICAgICBoYW5kbGVGaWx0ZXJDbGljayh2bSwgZmlsdGVyLmRhdGEpOwogICAgICB9KTsgLy90cmFuc2l0aW9uIGlmIGRhdGEgaXMgdXBkYXRlZAoKICAgICAgdGV4dC50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuYXR0cigieCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQueDA7CiAgICAgIH0pLmF0dHIoInkiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLnkwOwogICAgICB9KS5hdHRyKCJ3aWR0aCIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQueDEgLSBkLngwOwogICAgICB9KS5hdHRyKCJoZWlnaHQiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLnkxIC0gZC55MDsKICAgICAgfSkuYXR0cigib3BhY2l0eSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgaWYgKCF2bS5maWx0ZXJTZXQgfHwgdm0uZmlsdGVyU2V0LnNpemUgPT0gMCAmJiB2bS5uZWdhdGl2ZUZpbHRlclNldC5zaXplID09IDAgfHwgaXNGaWx0ZXJlZChkLmRhdGEsIHZtKSkgewogICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gMC41OwogICAgICB9KS5lYWNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBkMy5zZWxlY3QodGhpcykuaHRtbChmdW5jdGlvbiAoZCkgewogICAgICAgICAgdmFyIHZhbHVlID0gZC5kYXRhLnZhbHVlLnRvU3RyaW5nKCkucmVwbGFjZSgvXEIoPz0oZHszfSkrKD8hXGQpKS9nLCAiLCIpOwogICAgICAgICAgcmV0dXJuICI8ZGl2PjxwPiIgKyBkLmRhdGEubmFtZSArICIgfCAiICsgbkZvcm1hdHRlcih2YWx1ZSwgMikgKyAiIHwgIiArICh2YWx1ZSAvIGQucGFyZW50LnZhbHVlICogMTAwKS50b0ZpeGVkKDEpICsgIiAlPC9wPjwvZGl2PiI7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICB0ZXh0LmV4aXQoKS5yZW1vdmUoKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBDaGVja3MgaWYgdGhlIG9wYWNpdHkgb2YgdGhlIHNsaWNlcyBuZWVkcyB0byBiZSBjaGFuZ2VkCiAgICAgKi8KICAgIGNoYW5nZUZpbHRlcjogZnVuY3Rpb24gY2hhbmdlRmlsdGVyKCkgewogICAgICB2YXIgdm0gPSB0aGlzOwogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCIjIiArIHRoaXMuaWQpOwogICAgICBzdmcuc2VsZWN0QWxsKCJyZWN0IikuYXR0cigib3BhY2l0eSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgaWYgKCF2bS5maWx0ZXJTZXQgfHwgdm0uZmlsdGVyU2V0LnNpemUgPT0gMCAmJiB2bS5uZWdhdGl2ZUZpbHRlclNldC5zaXplID09IDAgfHwgaXNGaWx0ZXJlZChkLmRhdGEsIHZtKSkgewogICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gMC41OwogICAgICB9KTsKICAgICAgc3ZnLnNlbGVjdEFsbCgiZm9yZWlnbk9iamVjdCIpLmF0dHIoIm9wYWNpdHkiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIGlmICghdm0uZmlsdGVyU2V0IHx8IHZtLmZpbHRlclNldC5zaXplID09IDAgJiYgdm0ubmVnYXRpdmVGaWx0ZXJTZXQuc2l6ZSA9PSAwIHx8IGlzRmlsdGVyZWQoZC5kYXRhLCB2bSkpIHsKICAgICAgICAgIHJldHVybiAxOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIDAuNTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["TreeMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card>\n    <ChartControls\n      v-bind:data=\"data\"\n      v-bind:chartNumber=\"chartNumber\"\n      class=\"mb-0\"\n    />\n    <v-progress-circular\n      v-if=\"loading && !isFrozen\"\n      indeterminate\n      color=\"success\"\n    ></v-progress-circular>\n    <div class=\"tooltip\" :id=\"tooltipId\">\"></div>\n    <svg :id=\"id\" viewBox=\"0 0 660 500\"></svg>\n  </v-card>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport ChartControls from \"../ChartControls.vue\";\nimport {\n  handleFilterClick,\n  isFiltered,\n  nFormatter,\n} from \"../../helperFunctions/graphHelperFunctions\";\nexport default {\n  components: { ChartControls },\n  name: \"TreeMap\",\n  props: {\n    data: {\n      required: true,\n    },\n    width: {\n      default: 660,\n      type: Number,\n    },\n    height: {\n      default: 500,\n      type: Number,\n    },\n    chartNumber: {\n      required: true,\n      type: Number,\n    },\n    isSummary: {\n      required: true,\n      type: Boolean,\n    },\n    isFrozen: {\n      required: true,\n      type: Boolean,\n    },\n  },\n  data: () => ({\n    margin: { top: 10, right: 10, bottom: 0, left: 10 },\n  }),\n\n  computed: {\n    id() {\n      return \"chart\" + this.chartNumber.toString();\n    },\n    tooltipId() {\n      return \"tooltip\" + this.chartNumber.toString();\n    },\n\n    filterSet() {\n      return this.$store.getters[\"filterByType\"](this.data.filterType);\n    },\n\n    negativeFilterSet() {\n      return this.$store.getters[\"negativeFilterByType\"](this.data.filterType);\n    },\n\n    payload() {\n      return this.data.payload;\n    },\n    loading() {\n      return this.data.loading;\n    },\n\n    chartWidth() {\n      return this.width - this.margin.left - this.margin.right;\n    },\n    chartHeight() {\n      return this.height - this.margin.top - this.margin.bottom;\n    },\n  },\n  watch: {\n    payload: function () {\n      if (this.isFrozen) {\n        return;\n      } else {\n        this.updateChart();\n      }\n    },\n    isFrozen: function () {\n      if (this.isFrozen) {\n        return;\n      } else {\n        this.updateChart();\n      }\n    },\n\n    filterSet: function () {\n      this.changeFilter();\n    },\n    negativeFilterSet: function () {\n      this.changeFilter();\n    },\n  },\n\n  mounted() {\n    this.createTreeMap();\n    this.updateChart();\n  },\n\n  methods: {\n    /**\n     * Creates groups for chart\n     */\n    createTreeMap() {\n      var svg = d3.select(\"#\" + this.id).append(\"g\");\n      svg.append(\"g\").attr(\"class\", \"rects\");\n      svg.append(\"g\").attr(\"class\", \"foreignObjects\");\n      svg.attr(\n        \"transform\",\n        \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\"\n      );\n    },\n\n    /**\n     * Inserts data to chart and creates chart objects\n     */\n    updateChart() {\n      var svg = d3.select(\"#\" + this.id);\n      let tooltip = d3.select(\"#\" + this.tooltipId);\n      // checks if data exists, if not removes Tree elements\n      if (this.payload.length == 0) {\n        svg.selectAll(\"rect\").remove();\n        svg.selectAll(\"foreignObject\").remove();\n        return;\n      }\n\n      var vm = this;\n      // creates tree hierarchy from data\n      let hierarchy = d3\n        .hierarchy(this.payload, (node) => {\n          return node;\n        })\n        .sum((node) => {\n          return node[\"value\"];\n        });\n\n      // sets color scale\n      var color = d3\n        .scaleOrdinal()\n        .domain(\n          this.payload.map(function (d) {\n            return d.name;\n          })\n        )\n        .range([\n          \"var(--v-primary-base)\",\n          \"var(--v-secondary-base)\",\n          \"var(--v-tertiary-base)\",\n        ]);\n      // create treemap\n      var treemap = d3\n        .treemap()\n        .size([this.chartWidth, this.chartHeight])\n        .padding(1)\n        .round(true);\n\n      treemap(hierarchy);\n\n      let tiles = hierarchy.leaves();\n\n      var block = svg.select(\"g.rects\").selectAll(\"rect\").data(tiles);\n      // create blocks\n      block\n        .enter()\n        .insert(\"rect\")\n        .attr(\"transform\", (d) => `translate(${d.x0},${d.y0})`)\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          } else {\n            return 0.5;\n          }\n        })\n        .attr(\"fill\", (d) => {\n          return color(d.data.name);\n        })\n        .attr(\"width\", (d) => {\n          return d.x1 - d.x0;\n        })\n        .attr(\"height\", (d) => {\n          return d.y1 - d.y0;\n        });\n      //transition if data is updated\n      block\n        .transition()\n        .duration(1000)\n        .attr(\"transform\", (d) => `translate(${d.x0},${d.y0})`)\n        .attr(\"width\", (d) => d.x1 - d.x0)\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          } else {\n            return 0.5;\n          }\n        })\n        .attr(\"height\", (d) => d.y1 - d.y0);\n\n      //remove blocks if mapped data is not available anymore\n      block.exit().remove();\n      // creates text blocks overlaying tiles\n      var text = svg\n        .select(\"g.foreignObjects\")\n        .selectAll(\"foreignObject\")\n        .data(tiles);\n      text\n        .enter()\n        .insert(\"foreignObject\")\n        .attr(\"x\", (d) => d.x0)\n        .attr(\"y\", (d) => d.y0)\n        .attr(\"width\", (d) => {\n          return d.x1 - d.x0;\n        })\n        .attr(\"height\", (d) => {\n          return d.y1 - d.y0;\n        })\n        .style(\"fill\", \"var(--v-text-base)\")\n        .html((d) => {\n          let value = d.data.value\n            .toString()\n            .replace(/\\B(?=(d{3})+(?!\\d))/g, \",\");\n          return (\n            \"<div><p>\" +\n            d.data.name +\n            \" | \" +\n            nFormatter(value, 2) +\n            \" | \" +\n            ((value / d.parent.value) * 100).toFixed(1) +\n            \" %</p></div>\"\n          );\n        })\n        // activate tooltip\n        .on(\"mouseover\", function (event, d) {\n          var svgDim = svg.node().getBoundingClientRect();\n          var height = (svgDim.height / vm.height) * d.y0;\n          var width = (svgDim.width / vm.width) * d.x0;\n\n          let value = d.data.value\n            .toString()\n            .replace(/\\B(?=(d{3})+(?!\\d))/g, \",\");\n          tooltip.transition().duration(1000).style(\"opacity\", 0.8);\n          tooltip\n            .html(\n              '<p class=\"subtitle-2 white--text\">' +\n                d.data.name +\n                \" | \" +\n                nFormatter(value, 2) +\n                \" | \" +\n                ((value / d.parent.value) * 100).toFixed(1) +\n                \" %</p>\"\n            )\n            .style(\"left\", width + \"px\")\n            .style(\"top\", height + \"px\");\n        })\n        .on(\"mouseout\", function () {\n          tooltip.transition().duration(500).style(\"opacity\", 0);\n        })\n        // adds or removes filter\n        .on(\"click\", function (d, filter) {\n          handleFilterClick(vm, filter.data);\n        });\n\n      //transition if data is updated\n      text\n        .transition()\n        .duration(1000)\n        .attr(\"x\", (d) => d.x0)\n        .attr(\"y\", (d) => d.y0)\n        .attr(\"width\", (d) => {\n          return d.x1 - d.x0;\n        })\n        .attr(\"height\", (d) => {\n          return d.y1 - d.y0;\n        })\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          }\n          return 0.5;\n        })\n        .each(function () {\n          d3.select(this).html((d) => {\n            let value = d.data.value\n              .toString()\n              .replace(/\\B(?=(d{3})+(?!\\d))/g, \",\");\n            return (\n              \"<div><p>\" +\n              d.data.name +\n              \" | \" +\n              nFormatter(value, 2) +\n              \" | \" +\n              ((value / d.parent.value) * 100).toFixed(1) +\n              \" %</p></div>\"\n            );\n          });\n        });\n\n      text.exit().remove();\n    },\n\n    /**\n     * Checks if the opacity of the slices needs to be changed\n     */\n    changeFilter() {\n      const vm = this;\n      var svg = d3.select(\"#\" + this.id);\n      svg.selectAll(\"rect\").attr(\"opacity\", function (d) {\n        if (\n          !vm.filterSet ||\n          (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n          isFiltered(d.data, vm)\n        ) {\n          return 1;\n        }\n        return 0.5;\n      });\n      svg.selectAll(\"foreignObject\").attr(\"opacity\", function (d) {\n        if (\n          !vm.filterSet ||\n          (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n          isFiltered(d.data, vm)\n        ) {\n          return 1;\n        }\n        return 0.5;\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\ndiv.tooltip {\n  position: absolute;\n  text-align: center;\n  padding: 2px;\n  font: 12px sans-serif;\n  background: black;\n  border: 0px;\n  border-radius: 8px;\n  pointer-events: none;\n  opacity: 0;\n}\n</style>"],"sourceRoot":"src/components/chartComponents"}]}