{"remainingRequest":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js!/home/someone/projects/pythia/client/node_modules/eslint-loader/index.js??ref--14-0!/home/someone/projects/pythia/client/src/store/modules/detailData.js","dependencies":[{"path":"/home/someone/projects/pythia/client/src/store/modules/detailData.js","mtime":1643574803994},{"path":"/home/someone/projects/pythia/client/babel.config.js","mtime":1640282409286},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js","mtime":1643623769914},{"path":"/home/someone/projects/pythia/client/node_modules/eslint-loader/index.js","mtime":1643623769665}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/someone/projects/pythia/client/src/store/modules/detailData.js"],"names":["ConnectionsService","DNSConnectionService","NoticeService","ServiceSumService","ConnectionSumService","IPByteSummaryService","ProtocolSumService","DNSQueryTopKService","OriginHostTopKService","RespPortTopKService","TopKRespHostService","PortsOfInterestService","dispatchDetailViewByType","getDetailElementByChartType","namespaced","state","connectionsTableOptions","itemsPerPage","page","sortBy","sortDesc","groupBy","groupDesc","multiSort","mustSort","dNSTableOptions","noticesTableOptions","totalConnectionsCount","totalDNSConnectionsCount","totalNoticesCount","connectionTable","name","payload","loading","dNSTable","noticeTable","respHostsTopK","filterType","respPortsTopK","originHostsTopK","dNSQueriesTopK","portsOfInterest","connectionSummary","protocolSummary","serviceSummary","ipByteSummary","ipByteSummaryByTime","mutations","deleteDataFromType","elem","resetAllTablePages","setConnectionsPayload","newConnections","setConnectionsLoading","setTotalConnectionsCount","newConnectionsCount","setTotalNoticesCount","newNoticesCount","setTotalDNSCount","newDNSCount","setConnectionsTableOptions","options","setNoticesTableOptions","setDNSTableOptions","setDNSConnectionsPayload","setDNSConnectionsLoading","setNoticesPayload","notices","setNoticesLoading","setRespHostsTopKPayload","newRespHostsTopK","setRespHostsTopKLoading","setPortsOfInterestPayload","newPortsOfInterest","setPortsOfInterestLoading","setRespPortsTopKPayload","newRespPortsTopK","setRespPortsTopKLoading","setOriginHostsTopKPayload","newTopKOriginHost","setOriginHostsTopKLoading","setDNSQueriesTopKPayload","newDNSQueriesTopK","setDNSQueriesTopKLoading","setConnectionSummaryPayload","newSummary","setConnectionSummaryLoading","setProtocolSummaryPayload","setProtocolSummaryLoading","setIPByteSummaryPayload","setIPByteSummaryLoading","setIPByteSummaryByTimePayload","setIPByteSummaryByTimeLoading","setServiceSummaryLoading","setServiceSummaryPayload","actions","context","commit","getDataIfActive","type","rootGetters","deleteDataIfNotActive","getConnections","filters","post","then","response","data","connections","forEach","d","ts","Date","total","catch","finally","getDNSConnections","dNSConnections","getNotices","getServiceSummary","getProtocolSummary","getConnectionSummary","getIPByteSummaryByTime","postByTime","getIPByteSummary","getDNSQueriesTopK","getOriginHostsTopK","getRespHostsTopK","getRespPortsTopK","getPortsOfInterest","getDataByTime","dispatch","root","getters","dataByType"],"mappings":"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","sourcesContent":["import ConnectionsService from '../../services/ConnectionService';\nimport DNSConnectionService from '../../services/DNSConnectionService';\nimport NoticeService from '../../services/NoticeService';\nimport ServiceSumService from '../../services/ServiceSumService';\nimport ConnectionSumService from '../../services/ConnectionSumService'\nimport IPByteSummaryService from '../../services/IPByteSummaryService';\nimport ProtocolSumService from '../../services/ProtocolSumService';\nimport DNSQueryTopKService from '../../services/DNSQueryTopKService';\nimport OriginHostTopKService from '../../services/OriginHostTopKService';\nimport RespPortTopKService from '../../services/RespPortTopKService';\nimport TopKRespHostService from '../../services/RespHostTopKService';\nimport PortsOfInterestService from '../../services/PortsOfInterestService';\nimport {dispatchDetailViewByType, getDetailElementByChartType} from '../../helperFunctions/storeHelperFunctions'\n\n\nexport default {\n    namespaced: true,\n    state: {\n        connectionsTableOptions: {\n            itemsPerPage: 10,\n            page: 1,\n            sortBy: [],\n            sortDesc: [],\n            groupBy: [],\n            groupDesc: [],\n            multiSort: false,\n            mustSort: false\n        },\n\n        dNSTableOptions: {\n            itemsPerPage: 10,\n            page: 1,\n            sortBy: [],\n            sortDesc: [],\n            groupBy: [],\n            groupDesc: [],\n            multiSort: false,\n            mustSort: false\n        },\n\n        noticesTableOptions: {\n            itemsPerPage: 10,\n            page: 1,\n            sortBy: [],\n            sortDesc: [],\n            groupBy: [],\n            groupDesc: [],\n            multiSort: false,\n            mustSort: false\n        },\n\n        totalConnectionsCount: 0,\n        totalDNSConnectionsCount:0,\n        totalNoticesCount:0,\n\n        connectionTable: {\n            name: 'connectionTable',\n            payload: [],\n            loading: false,\n        },\n\n        dNSTable: {\n            name: 'dNSTable',\n            payload: [],\n            loading: false,\n\n        },\n\n        noticeTable: {\n            payload: [],\n            name: 'noticeTable',\n            loading: false,\n\n        },\n\n        respHostsTopK:\n        {\n            name: 'respHostsTopK',\n            filterType: 'target',\n            payload: [],\n            loading: false,\n\n        },\n\n        respPortsTopK:\n        {\n            name: 'respPortsTopK',\n            filterType: 'resp_p',\n            payload: [],\n            loading: false,\n\n        },\n        originHostsTopK:\n        {\n            name: 'originHostsTopK',\n            filterType: 'source',\n            payload: [],\n            loading: false,\n\n        },\n\n\n        dNSQueriesTopK:\n        {\n            name: 'dNSQueriesTopK',\n            filterType: 'query_text',\n            payload: [],\n            loading: false,\n\n        },\n\n        portsOfInterest:\n        {\n            name: 'portsOfInterest',\n            filterType: 'resp_p',\n            payload: [],\n            loading: false,\n        },\n\n        connectionSummary:\n        {\n            name: 'connectionSummary',\n            payload: [],\n            loading: false,\n        },\n\n        protocolSummary:\n        {\n            name: 'protocolSummary',\n            payload: [],\n            filterType: 'proto',\n            loading: false,\n\n\n        },\n\n        serviceSummary:\n        {\n            name: 'serviceSummary',\n            filterType: 'service',\n            payload: [],\n            loading: false,\n        },\n\n        ipByteSummary:\n        {\n            name: 'ipByteSummary',\n            payload: [],\n            loading: false,\n        },\n\n\n        ipByteSummaryByTime:\n        {\n            name: 'ipByteSummaryByTime',\n            payload: [],\n            loading: false,\n\n        }\n    },\n\n    mutations: {\n        deleteDataFromType(state,elem) {\n            elem.payload = [];\n        },\n\n        resetAllTablePages(state) {\n            state.connectionsTableOptions.page = 1\n            state.noticesTableOptions.page = 1\n            state.dNSTableOptions.page = 1\n\n        },\n\n        setConnectionsPayload(state, newConnections) {\n            state.connectionTable.payload = newConnections;\n        },\n        setConnectionsLoading(state, loading) {\n            state.connectionTable.loading = loading\n        },\n\n        setTotalConnectionsCount(state, newConnectionsCount) {\n            state.totalConnectionsCount = newConnectionsCount;\n        },\n        setTotalNoticesCount(state, newNoticesCount) {\n            state.totalNoticesCount = newNoticesCount;\n        },\n        setTotalDNSCount(state, newDNSCount) {\n            state.totalDNSConnectionsCount = newDNSCount;\n        },\n        setConnectionsTableOptions(state, options) {\n            state.connectionsTableOptions = options\n        },\n        setNoticesTableOptions(state, options) {\n            state.noticesTableOptions = options\n        },\n        setDNSTableOptions(state, options) {\n            state.dNSTableOptions = options\n        },\n\n        setDNSConnectionsPayload(state, newConnections) {\n            state.dNSTable.payload= newConnections;\n        },\n\n        setDNSConnectionsLoading(state, loading) {\n            state.dNSTable.loading = loading\n        },\n\n\n        setNoticesPayload(state, notices) {\n            state.noticeTable.payload = notices;\n        },\n\n        setNoticesLoading(state, loading) {\n            state.noticeTable.loading = loading;\n        },\n\n        setRespHostsTopKPayload(state, newRespHostsTopK) {\n            state.respHostsTopK.payload = newRespHostsTopK;\n        },\n        setRespHostsTopKLoading(state, loading) {\n            state.respHostsTopK.loading = loading\n        },\n\n        setPortsOfInterestPayload(state, newPortsOfInterest) {\n            state.portsOfInterest.payload = newPortsOfInterest;\n        },\n\n        setPortsOfInterestLoading(state, loading) {\n            state.portsOfInterest.loading = loading\n        },\n\n        setRespPortsTopKPayload(state, newRespPortsTopK) {\n            state.respPortsTopK.payload = newRespPortsTopK;\n        },\n\n        setRespPortsTopKLoading(state, loading) {\n            state.respPortsTopK.loading = loading\n        },\n\n        setOriginHostsTopKPayload(state, newTopKOriginHost) {\n            state.originHostsTopK.payload = newTopKOriginHost;\n        },\n\n        setOriginHostsTopKLoading(state, loading) {\n            state.originHostsTopK.loading = loading\n        },\n\n        setDNSQueriesTopKPayload(state, newDNSQueriesTopK) {\n            state.dNSQueriesTopK.payload = newDNSQueriesTopK;\n        },\n        \n        setDNSQueriesTopKLoading(state, loading) {\n            state.dNSQueriesTopK.loading = loading\n        },\n\n        setConnectionSummaryPayload(state, newSummary) {\n            state.connectionSummary.payload = newSummary\n        },\n\n        setConnectionSummaryLoading(state, loading) {\n            state.connectionSummary.loading = loading\n        },\n\n\n        setProtocolSummaryPayload(state, newSummary) {\n            state.protocolSummary.payload = newSummary\n        },\n        setProtocolSummaryLoading(state, loading) {\n            state.protocolSummary.loading = loading\n        },\n\n        setIPByteSummaryPayload(state, newSummary) {\n            state.ipByteSummary.payload = newSummary\n        },\n\n        setIPByteSummaryLoading(state, loading) {\n            state.ipByteSummary.loading = loading\n        },\n\n        setIPByteSummaryByTimePayload(state, newSummary) {\n            state.ipByteSummaryByTime.payload = newSummary\n        },\n        setIPByteSummaryByTimeLoading(state, loading) {\n            state.ipByteSummaryByTime.loading = loading\n        },\n\n        setServiceSummaryLoading(state, loading) {\n            state.serviceSummary.loading = loading;\n        },        \n        setServiceSummaryPayload(state, newSummary) {\n            state.serviceSummary.payload = newSummary;\n        },        \n    },\n\n    actions: {\n\n        setNoticesTableOptions(context, options) { \n            context.commit('setNoticesTableOptions', options) \n        },\n\n        setDNSTableOptions(context, options) { \n            context.commit('setDNSTableOptions', options) \n        },\n        setConnectionsTableOptions(context, options) { \n            context.commit('setConnectionsTableOptions', options) \n        },\n\n        getDataIfActive(context, type) {\n            //gets data only if data is not already available\n            if (context.rootGetters['viewCountByViewDetail'](type) == 1) {\n                dispatchDetailViewByType(context, type)\n            }\n        },\n\n        deleteDataIfNotActive(context, type) { \n            //deletes payload if no other view is active with same payload\n            if (context.rootGetters['viewCountByViewDetail'](type) == 0) {\n                var elem = getDetailElementByChartType(context.state, type)\n                context.commit('deleteDataFromType', elem) \n            }\n        },\n\n        getConnections(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            filters['table_options'] = context.state.connectionsTableOptions\n            context.commit('setConnectionsLoading', true);\n            ConnectionsService.post(filters).then((response) => {\n                response.data.connections.forEach(d => {\n                d.ts = new Date(d.ts * 1000)})\n                context.commit('setConnectionsPayload', response.data.connections);\n                context.commit('setTotalConnectionsCount',response.data.total);\n            }).catch(() => {\n                context.commit('setConnectionsPayload', []);\n            }).finally(() => {\n                context.commit('setConnectionsLoading', false);\n\n            })\n        },\n\n        getDNSConnections(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            filters['table_options'] = context.state.dNSTableOptions\n            context.commit('setDNSConnectionsLoading',true);\n\n            DNSConnectionService.post(filters).then((response) => {\n                response.data.dNSConnections.forEach(d => {\n                    d.ts = new Date(d.ts * 1000)\n                });\n                context.commit('setDNSConnectionsPayload', response.data.dNSConnections);\n                context.commit('setTotalDNSCount', response.data.total);\n            }).catch(() => {\n                context.commit('setDNSConnectionsPayload', []);\n            }).finally(() => {                 \n                context.commit('setDNSConnectionsLoading',false);\n        })\n        },\n\n        getNotices(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            filters['table_options'] = context.state.noticesTableOptions\n            context.commit('setNoticesLoading', true);\n            NoticeService.post(filters).then((response) => {\n                response.data.notices.forEach(d => {\n                    d.ts = new Date(d.ts * 1000)\n                });\n                context.commit('setNoticesPayload', response.data.notices)\n                context.commit('setTotalNoticesCount',response.data.total);\n\n            }).catch(() => {\n                context.commit('setNoticesPayload', []);\n                context.commit('setTotalNoticesCount',0);\n            }).finally(() => {\n                context.commit('setNoticesLoading', false);\n            })\n        },\n      \n\n        getServiceSummary(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            context.commit('setServiceSummaryLoading', true);\n            ServiceSumService.post(filters).then((response) => {\n                response.data.forEach(d => {\n                    d.ts = new Date(d.ts * 1000)\n                });\n                context.commit('setServiceSummaryPayload', response.data);\n            }).catch(() => {\n                context.commit('setServiceSummaryPayload', []);\n            }).finally(() => {                \n                context.commit('setServiceSummaryLoading', false);\n        })\n        },\n\n        getProtocolSummary(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            context.commit('setProtocolSummaryLoading',true);\n            ProtocolSumService.post(filters).then((response) => {\n                response.data.forEach(d => {\n                    d.ts = new Date(d.ts * 1000)\n                });\n                context.commit('setProtocolSummaryPayload', response.data);\n\n            }).catch(() => {\n                context.commit('setProtocolSummaryPayload', []);\n\n            }).finally(() => {\n                context.commit('setProtocolSummaryLoading',false);\n\n            })\n        },\n\n        getConnectionSummary(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            context.commit('setConnectionSummaryLoading',true);\n\n            ConnectionSumService.post(filters).then((response) => {\n                response.data.forEach(d => {\n                d.ts = new Date(d.ts * 1000)})\n                context.commit('setConnectionSummaryPayload', response.data);\n\n            }).catch(() => {\n                context.commit('setConnectionSummaryPayload', []);\n            }).finally(() => {\n                context.commit('setConnectionSummaryLoading',false);\n            })\n        },\n\n        getIPByteSummaryByTime(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            context.commit('setIPByteSummaryByTimeLoading', true);\n\n             IPByteSummaryService.postByTime(filters).then((response) => {\n                response.data.forEach(d => {\n                    d.ts = new Date(d.ts * 1000)\n                });\n                context.commit('setIPByteSummaryByTimePayload', response.data);\n\n            }).catch(() => {\n                context.commit('setIPByteSummaryByTimePayload', []);\n            }).finally(() => {\n                context.commit('setIPByteSummaryByTimeLoading', false);\n            })\n        },\n\n        getIPByteSummary(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            context.commit('setIPByteSummaryLoading', true);\n\n             IPByteSummaryService.post(filters).then((response) => {\n                context.commit('setIPByteSummaryPayload', response.data);\n            }).catch(() => {\n                context.commit('setIPByteSummaryPayload', []);\n            }).finally(() => {\n                context.commit('setIPByteSummaryLoading', false);\n            })\n        },\n\n        getDNSQueriesTopK(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            context.commit('setDNSQueriesTopKLoading', true);\n\n            DNSQueryTopKService.post(filters).then((response) => {\n                context.commit('setDNSQueriesTopKPayload', response.data);\n\n            }).catch(() => {\n                context.commit('setDNSQueriesTopKPayload', []);\n            }).finally(() => {\n                context.commit('setDNSQueriesTopKLoading', false);\n            })\n        },\n\n        getOriginHostsTopK(context) {\n            context.commit('setOriginHostsTopKLoading', true);\n            const filters = context.rootGetters['filterRequestParams']\n            OriginHostTopKService.post(filters).then((response) => {\n                context.commit('setOriginHostsTopKPayload', response.data);\n\n            }).catch(() => {\n                context.commit('setOriginHostsTopKPayload', []);\n\n            }).finally(() => {\n                context.commit('setOriginHostsTopKLoading', false);\n            })\n        },\n\n        getRespHostsTopK(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            context.commit('setRespHostsTopKLoading', true);\n            TopKRespHostService.post(filters).then((response) => {\n                context.commit('setRespHostsTopKPayload', response.data);\n\n            }).catch(() => {\n                context.commit('setRespHostsTopKPayload', []);\n            }).finally(() => {\n                context.commit('setRespHostsTopKLoading', false);\n            })\n        },\n        getRespPortsTopK(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            context.commit('setRespPortsTopKLoading', true);\n\n            RespPortTopKService.post(filters).then((response) => {\n                context.commit('setRespPortsTopKPayload', response.data);\n            }).catch(() => {\n                context.commit('setRespPortsTopKPayload', []);\n            }).finally(() => {\n                context.commit('setRespPortsTopKLoading', false);\n            })\n        },\n\n        getPortsOfInterest(context) {\n            const filters = context.rootGetters['filterRequestParams']\n            context.commit('setPortsOfInterestLoading', true);\n\n            PortsOfInterestService.post(filters).then((response) => {\n                context.commit('setPortsOfInterestPayload', response.data);\n\n            }).catch(() => {\n                context.commit('setPortsOfInterestPayload', []);\n\n            }).finally(() => {\n                context.commit('setPortsOfInterestLoading', false);\n            })\n        },\n\n        getDataByTime(context) { \n            context.commit('resetAllTablePages');\n\n            if (context.rootGetters['viewCountByViewDetail'](context.state.ipByteSummary.name) > 0) {\n                context.dispatch('getIPByteSummary')\n            }\n            if (context.rootGetters['viewCountByViewDetail'](context.state.ipByteSummaryByTime.name) > 0) {\n                context.dispatch('getIPByteSummaryByTime')\n            }\n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.serviceSummary.name) > 0) {\n                context.dispatch('getServiceSummary');\n            }\n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.protocolSummary.name) > 0) {\n                context.dispatch('getProtocolSummary');\n            }\n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.connectionSummary.name) > 0) {\n                context.dispatch('getConnectionSummary');\n            }\n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.dNSQueriesTopK.name) > 0) {\n                context.dispatch('getDNSQueriesTopK');\n            }\n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.originHostsTopK.name) > 0) {\n                context.dispatch('getOriginHostsTopK');\n            }    \n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.respHostsTopK.name) > 0) {\n                context.dispatch('getRespHostsTopK');\n            }\n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.respPortsTopK.name) > 0) {\n                context.dispatch('getRespPortsTopK');\n            }\n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.portsOfInterest.name) > 0) {\n                context.dispatch('getPortsOfInterest');\n            }       \n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.dNSTable.name) > 0) {\n                context.dispatch('getDNSConnections');\n            }\n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.connectionTable.name) > 0) {\n                context.dispatch('getConnections'); \n            }          \n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.noticeTable.name) > 0) {\n                context.dispatch('getNotices');\n            }                              \n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.connectionSummary.name) > 0) {\n                context.dispatch('getConnectionSummary')\n            }\n            \n            if (context.rootGetters['viewCountByViewDetail'](context.state.ipByteSummaryByTime.name) > 0) {\n                context.dispatch('getIPByteSummaryByTime')\n            }\n\n            context.commit('resetFilterChangeTracker', null, {root: true})\n            context.commit('resetNegativeFilterChangeTracker', null, {root: true})\n\n        },\n\n    \n    },\n    getters: {\n        dataByType: (state) => (type) => {\n            var data = getDetailElementByChartType(state, type)\n            return data\n        },\n\n    \n    }\n}\n\n/*\nfunction addDateElementToMap(map, timestamp, coeff) {\n    var date = {\n        ts: new Date(Math.floor(timestamp.getTime() / coeff) * coeff),\n        value: 0\n    }\n    if (map.has(date.ts.getTime())) {\n        date.value = map.get(date.ts.getTime()).value + 1\n        map.set(date.ts.getTime(), date)\n    }\n    else {\n        map.set(date.ts.getTime(), date)\n    }\n}\n\nfunction addElementToMap(map, element) {\n    if (map.has(element)) {\n        map.set(element, map.get(element) + 1)\n    }\n    else {\n        map.set(element, 1);\n    }\n}\n\nfunction addPortsOfInterestToMap(map, port, portsOfInterest) {\n    if (portsOfInterest.includes(port)) {\n        if (map.has(port)) {\n            map.set(port, map.get(port) + 1);\n        }\n        else {\n            map.set(port, 1)\n        }\n    }\n}\n*/\n\n\n\n"]}]}