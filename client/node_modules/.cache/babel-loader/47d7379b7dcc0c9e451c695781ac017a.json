{"remainingRequest":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js!/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/someone/projects/pythia/client/src/components/chartComponents/PieChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/someone/projects/pythia/client/src/components/chartComponents/PieChart.vue","mtime":1643631808753},{"path":"/home/someone/projects/pythia/client/babel.config.js","mtime":1640282409286},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js","mtime":1643623769914},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js","mtime":1643623769500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL3NvbWVvbmUvcHJvamVjdHMvcHl0aGlhL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCAqIGFzIGQzIGZyb20gImQzIjsKaW1wb3J0IENoYXJ0Q29udHJvbHMgZnJvbSAiLi4vQ2hhcnRDb250cm9scy52dWUiOwppbXBvcnQgeyBoYW5kbGVGaWx0ZXJDbGljaywgaXNGaWx0ZXJlZCwgbkZvcm1hdHRlciB9IGZyb20gIi4uLy4uL2hlbHBlckZ1bmN0aW9ucy9ncmFwaEhlbHBlckZ1bmN0aW9ucyI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBDaGFydENvbnRyb2xzOiBDaGFydENvbnRyb2xzCiAgfSwKICBuYW1lOiAiUGllQ2hhcnQiLAogIHByb3BzOiB7CiAgICBkYXRhOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgd2lkdGg6IHsKICAgICAgZGVmYXVsdDogODAwLAogICAgICB0eXBlOiBOdW1iZXIKICAgIH0sCiAgICBoZWlnaHQ6IHsKICAgICAgZGVmYXVsdDogNDUwLAogICAgICB0eXBlOiBOdW1iZXIKICAgIH0sCiAgICBjaGFydE51bWJlcjogewogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdHlwZTogTnVtYmVyCiAgICB9LAogICAgaXNTdW1tYXJ5OiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBCb29sZWFuCiAgICB9LAogICAgaXNGcm96ZW46IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IEJvb2xlYW4KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtYXJnaW46IHsKICAgICAgICB0b3A6IDAsCiAgICAgICAgcmlnaHQ6IDAsCiAgICAgICAgYm90dG9tOiAwLAogICAgICAgIGxlZnQ6IDAKICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpZDogZnVuY3Rpb24gaWQoKSB7CiAgICAgIHJldHVybiAiY2hhcnQiICsgdGhpcy5jaGFydE51bWJlci50b1N0cmluZygpOwogICAgfSwKICAgIHRvb2x0aXBJZDogZnVuY3Rpb24gdG9vbHRpcElkKCkgewogICAgICByZXR1cm4gInRvb2x0aXAiICsgdGhpcy5jaGFydE51bWJlci50b1N0cmluZygpOwogICAgfSwKICAgIGZpbHRlclNldDogZnVuY3Rpb24gZmlsdGVyU2V0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZ2V0dGVyc1siZmlsdGVyQnlUeXBlIl0odGhpcy5kYXRhLmZpbHRlclR5cGUpOwogICAgfSwKICAgIG5lZ2F0aXZlRmlsdGVyU2V0OiBmdW5jdGlvbiBuZWdhdGl2ZUZpbHRlclNldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbIm5lZ2F0aXZlRmlsdGVyQnlUeXBlIl0odGhpcy5kYXRhLmZpbHRlclR5cGUpOwogICAgfSwKICAgIHBheWxvYWQ6IGZ1bmN0aW9uIHBheWxvYWQoKSB7CiAgICAgIHJldHVybiB0aGlzLmRhdGEucGF5bG9hZDsKICAgIH0sCiAgICBsb2FkaW5nOiBmdW5jdGlvbiBsb2FkaW5nKCkgewogICAgICByZXR1cm4gdGhpcy5kYXRhLmxvYWRpbmc7CiAgICB9LAogICAgY2hhcnRXaWR0aDogZnVuY3Rpb24gY2hhcnRXaWR0aCgpIHsKICAgICAgcmV0dXJuIHRoaXMud2lkdGggLSB0aGlzLm1hcmdpbi5sZWZ0IC0gdGhpcy5tYXJnaW4ucmlnaHQ7CiAgICB9LAogICAgY2hhcnRIZWlnaHQ6IGZ1bmN0aW9uIGNoYXJ0SGVpZ2h0KCkgewogICAgICByZXR1cm4gdGhpcy5oZWlnaHQgLSB0aGlzLm1hcmdpbi50b3AgLSB0aGlzLm1hcmdpbi5ib3R0b207CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgcGF5bG9hZDogZnVuY3Rpb24gcGF5bG9hZCgpIHsKICAgICAgaWYgKHRoaXMuaXNGcm96ZW4pIHsKICAgICAgICByZXR1cm47CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy51cGRhdGVDaGFydCgpOwogICAgICB9CiAgICB9LAogICAgaXNGcm96ZW46IGZ1bmN0aW9uIGlzRnJvemVuKCkgewogICAgICBpZiAodGhpcy5pc0Zyb3plbikgewogICAgICAgIHJldHVybjsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICAgIH0KICAgIH0sCiAgICBmaWx0ZXJTZXQ6IGZ1bmN0aW9uIGZpbHRlclNldCgpIHsKICAgICAgdGhpcy5jaGFuZ2VGaWx0ZXIoKTsKICAgIH0sCiAgICBuZWdhdGl2ZUZpbHRlclNldDogZnVuY3Rpb24gbmVnYXRpdmVGaWx0ZXJTZXQoKSB7CiAgICAgIHRoaXMuY2hhbmdlRmlsdGVyKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5jcmVhdGVQaWVDaGFydCgpOwogICAgdGhpcy51cGRhdGVDaGFydCgpOwogIH0sCiAgbWV0aG9kczogewogICAgLyoqCiAgICAgKiBDcmVhdGVzIGdyb3VwcyBmb3IgY2hhcnQKICAgICAqLwogICAgY3JlYXRlUGllQ2hhcnQ6IGZ1bmN0aW9uIGNyZWF0ZVBpZUNoYXJ0KCkgewogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KCIjIiArIHRoaXMuaWQpLmFwcGVuZCgiZyIpOwogICAgICBzdmcuYXR0cigidHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgdGhpcy5tYXJnaW4ubGVmdCArICIsIiArIHRoaXMubWFyZ2luLnRvcCArICIpIik7CiAgICAgIHZhciBjb250ZW50ID0gc3ZnLmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwgImNvbnRlbnQiICsgdGhpcy5jaGFydE51bWJlcik7CiAgICAgIGNvbnRlbnQuYXBwZW5kKCJnIikuYXR0cigiY2xhc3MiLCAic2xpY2VzIiArIHRoaXMuY2hhcnROdW1iZXIpOwogICAgICBjb250ZW50LmFwcGVuZCgiZyIpLmF0dHIoImNsYXNzIiwgImxhYmVscyIgKyB0aGlzLmNoYXJ0TnVtYmVyKTsKICAgICAgY29udGVudC5hcHBlbmQoImciKS5hdHRyKCJjbGFzcyIsICJsaW5lcyIgKyB0aGlzLmNoYXJ0TnVtYmVyKTsKICAgICAgY29udGVudC5hdHRyKCJ0cmFuc2Zvcm0iLCAidHJhbnNsYXRlKCIgKyB0aGlzLmNoYXJ0V2lkdGggLyAyICsgIiwiICsgdGhpcy5jaGFydEhlaWdodCAvIDIgKyAiKSIpOwogICAgfSwKCiAgICAvKioKICAgICAqIEluc2VydHMgZGF0YSB0byBjaGFydCBhbmQgY3JlYXRlcyBjaGFydCBvYmplY3RzCiAgICAgKi8KICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgdmFyIHRvb2x0aXAgPSBkMy5zZWxlY3QoIiMiICsgdGhpcy50b29sdGlwSWQpOwogICAgICB2YXIgdm0gPSB0aGlzOwogICAgICB2YXIgcmFkaXVzID0gTWF0aC5taW4odGhpcy5jaGFydFdpZHRoLCB0aGlzLmNoYXJ0SGVpZ2h0KSAvIDI7IC8vIHNldCBjb2xvciBkb21haW4gZm9yIHZhbHVlcwoKICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgiIyIgKyB0aGlzLmlkKTsKICAgICAgdmFyIGNvbG9yID0gZDMuc2NhbGVPcmRpbmFsKCkuZG9tYWluKHRoaXMucGF5bG9hZC5tYXAoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5uYW1lOwogICAgICB9KSkucmFuZ2UoWyJ2YXIoLS12LXByaW1hcnktYmFzZSkiLCAidmFyKC0tdi1zZWNvbmRhcnktYmFzZSkiLCAidmFyKC0tdi10ZXJ0aWFyeS1iYXNlKSIsICJ2YXIoLS12LXF1YXRlcm5hcnktYmFzZSkiLCAidmFyKC0tdi1xdWluYXJ5LWRhcmtlbjEpIl0pOyAvLyBjYWxjdWxhdGUgc3VtIG9mIGFsIHZhbHVlcwoKICAgICAgdmFyIGdsb2JhbFBhY2tldENvdW50ID0gdGhpcy5wYXlsb2FkLnJlZHVjZShmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVybiBhICsgYi52YWx1ZTsKICAgICAgfSwgMCk7IC8vIHByZXBhcmUgZGF0YSBmb3IgY2hhcnQKCiAgICAgIHZhciBkYXRhID0gdGhpcy5wYXlsb2FkLm1hcChmdW5jdGlvbiAobGFiZWwpIHsKICAgICAgICB2YXIgcGFja2V0Q291bnQgPSBsYWJlbC52YWx1ZTsKICAgICAgICByZXR1cm4gewogICAgICAgICAgbmFtZTogbGFiZWwubmFtZSwKICAgICAgICAgIHBhY2tldENvdW50OiBwYWNrZXRDb3VudCwKICAgICAgICAgIHBlcmNlbnRhZ2U6IChwYWNrZXRDb3VudCAvIGdsb2JhbFBhY2tldENvdW50ICogMTAwKS50b0ZpeGVkKDEpCiAgICAgICAgfTsKICAgICAgfSk7IC8vIGNyZWF0ZSBwaWUgc2NhbGluZyB2YWx1ZXMKCiAgICAgIHZhciBwaWUgPSBkMy5waWUoKS5zb3J0KG51bGwpLnZhbHVlKGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQucGFja2V0Q291bnQgKiAxLjE7CiAgICAgIH0pLnBhZEFuZ2xlKDAuMDI1KTsKICAgICAgdmFyIGFyYyA9IGQzLmFyYygpLm91dGVyUmFkaXVzKHJhZGl1cyAqIDAuOCkuaW5uZXJSYWRpdXMocmFkaXVzICogMC40KTsKICAgICAgdmFyIG91dGVyQXJjID0gZDMuYXJjKCkuaW5uZXJSYWRpdXMocmFkaXVzICogMC45KS5vdXRlclJhZGl1cyhyYWRpdXMgKiAwLjkpOwoKICAgICAgdmFyIGtleSA9IGZ1bmN0aW9uIGtleShkKSB7CiAgICAgICAgcmV0dXJuIGQuZGF0YS5uYW1lOwogICAgICB9OyAvLyBjcmVhdGUgc2xpY2VzCgoKICAgICAgdmFyIHNsaWNlID0gc3ZnLnNlbGVjdCgiZy5zbGljZXMiICsgdGhpcy5jaGFydE51bWJlcikuc2VsZWN0QWxsKCJwYXRoIikuZGF0YShwaWUoZGF0YSwga2V5KSk7CiAgICAgIHNsaWNlLmVudGVyKCkuaW5zZXJ0KCJwYXRoIikuc3R5bGUoImZpbGwiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBjb2xvcihkLmRhdGEubmFtZSk7CiAgICAgIH0pLmF0dHIoImQiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHRoaXMuX2N1cnJlbnQgPSBkOwogICAgICAgIHJldHVybiBhcmMoZCk7CiAgICAgIH0pLmF0dHIoIm9wYWNpdHkiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIGlmICghdm0uZmlsdGVyU2V0IHx8IHZtLmZpbHRlclNldC5zaXplID09IDAgJiYgdm0ubmVnYXRpdmVGaWx0ZXJTZXQuc2l6ZSA9PSAwIHx8IGlzRmlsdGVyZWQoZC5kYXRhLCB2bSkpIHsKICAgICAgICAgIHJldHVybiAxOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gMC41OwogICAgICAgIH0KICAgICAgfSkgLy8gYWRkIG9yIHJlbW92ZSBmaWx0ZXIKICAgICAgLm9uKCJjbGljayIsIGZ1bmN0aW9uIChkLCBmaWx0ZXIpIHsKICAgICAgICBoYW5kbGVGaWx0ZXJDbGljayh2bSwgZmlsdGVyLmRhdGEpOwogICAgICB9KSAvLyBzaG93IHRvb2x0aXAKICAgICAgLm9uKCJtb3VzZW92ZXIiLCBmdW5jdGlvbiAoZXZlbnQsIGQpIHsKICAgICAgICB2YXIgX2QzJHBvaW50ZXIgPSBkMy5wb2ludGVyKGV2ZW50LCBzdmcubm9kZSgpKSwKICAgICAgICAgICAgX2QzJHBvaW50ZXIyID0gX3NsaWNlZFRvQXJyYXkoX2QzJHBvaW50ZXIsIDIpLAogICAgICAgICAgICB4ID0gX2QzJHBvaW50ZXIyWzBdLAogICAgICAgICAgICB5ID0gX2QzJHBvaW50ZXIyWzFdOwoKICAgICAgICB2YXIgc3ZnRGltID0gc3ZnLm5vZGUoKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICAgICAgICB2YXIgbGVmdCA9IHN2Z0RpbS53aWR0aCAvIHZtLmNoYXJ0V2lkdGggKiB4OwogICAgICAgIHZhciB0b3AgPSBzdmdEaW0uaGVpZ2h0IC8gdm0uY2hhcnRIZWlnaHQgKiB5OwogICAgICAgIHZhciB2YWx1ZSA9IGQuZGF0YS5wYWNrZXRDb3VudC50b1N0cmluZygpLnJlcGxhY2UoL1xCKD89KGR7M30pKyg/IVxkKSkvZywgIiwiKTsKICAgICAgICB0b29sdGlwLnRyYW5zaXRpb24oKS5kdXJhdGlvbigxMDAwKS5zdHlsZSgib3BhY2l0eSIsIDAuOCk7CiAgICAgICAgdG9vbHRpcC5odG1sKCc8cCBjbGFzcz0ic3VidGl0bGUtMiB3aGl0ZS0tdGV4dCI+JyArIGQuZGF0YS5uYW1lICsgIiB8ICIgKyBuRm9ybWF0dGVyKHZhbHVlLCAyKSArICIgfCAiICsgZC5kYXRhLnBlcmNlbnRhZ2UgKyAiICU8L3A+Iikuc3R5bGUoImxlZnQiLCBsZWZ0ICsgInB4Iikuc3R5bGUoInRvcCIsIHRvcCArICJweCIpOwogICAgICB9KS5vbigibW91c2VvdXQiLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgdG9vbHRpcC50cmFuc2l0aW9uKCkuZHVyYXRpb24oNTAwKS5zdHlsZSgib3BhY2l0eSIsIDApOwogICAgICB9KTsgLy90cmFuc2l0aW9uIGlmIGRhdGEgaXMgdXBkYXRlZAoKICAgICAgc2xpY2UudHJhbnNpdGlvbigpLmR1cmF0aW9uKDEwMDApIC8vIGN1c3RvbSBpbnRlcnBvbGF0aW9uIGZ1bmN0aW9uIGZvciB0cmFuc2l0aW9uCiAgICAgIC5hdHRyVHdlZW4oImQiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHRoaXMuX2N1cnJlbnQgPSB0aGlzLl9jdXJyZW50IHx8IGQ7CiAgICAgICAgdmFyIGludGVycG9sYXRlID0gZDMuaW50ZXJwb2xhdGUodGhpcy5fY3VycmVudCwgZCk7CiAgICAgICAgdGhpcy5fY3VycmVudCA9IGludGVycG9sYXRlKDApOwogICAgICAgIHJldHVybiBmdW5jdGlvbiAodCkgewogICAgICAgICAgcmV0dXJuIGFyYyhpbnRlcnBvbGF0ZSh0KSk7CiAgICAgICAgfTsKICAgICAgfSkuYXR0cigib3BhY2l0eSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgaWYgKCF2bS5maWx0ZXJTZXQgfHwgdm0uZmlsdGVyU2V0LnNpemUgPT0gMCAmJiB2bS5uZWdhdGl2ZUZpbHRlclNldC5zaXplID09IDAgfHwgaXNGaWx0ZXJlZChkLmRhdGEsIHZtKSkgewogICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiAwLjQ7CiAgICAgICAgfQogICAgICB9KTsgLy9yZW1vdmUgc2xpY2VzIGlmIG1hcHBlZCBkYXRhIGlzIG5vdCBhdmFpbGFibGUgYW55bW9yZQoKICAgICAgc2xpY2UuZXhpdCgpLnJlbW92ZSgpOyAvL21hcHMgZm9yIGNvbGxpc2lvbiBjaGVjawoKICAgICAgdmFyIHRleHRQb3NpdGlvbnMgPSBuZXcgTWFwKCk7CiAgICAgIHZhciBsaW5lUG9zaXRpb25zID0gbmV3IE1hcCgpOyAvL2NyZWF0ZSB0ZXh0CgogICAgICB2YXIgdGV4dCA9IHN2Zy5zZWxlY3QoIi5sYWJlbHMiICsgdGhpcy5jaGFydE51bWJlcikuc2VsZWN0QWxsKCJ0ZXh0IikuZGF0YShwaWUoZGF0YSksIGtleSk7CgogICAgICBmdW5jdGlvbiBtaWRBbmdsZShkKSB7CiAgICAgICAgcmV0dXJuIGQuc3RhcnRBbmdsZSArIChkLmVuZEFuZ2xlIC0gZC5zdGFydEFuZ2xlKSAvIDI7CiAgICAgIH0KCiAgICAgIHRleHQuZW50ZXIoKS5hcHBlbmQoInRleHQiKS5hdHRyKCJkeSIsICIuMzVlbSIpLmF0dHIoIm9wYWNpdHkiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIGlmICghdm0uZmlsdGVyU2V0IHx8IHZtLmZpbHRlclNldC5zaXplID09IDAgJiYgdm0ubmVnYXRpdmVGaWx0ZXJTZXQuc2l6ZSA9PSAwIHx8IGlzRmlsdGVyZWQoZC5kYXRhLCB2bSkpIHsKICAgICAgICAgIHJldHVybiAxOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIDAuNDsKICAgICAgfSkgLy8gYWRkIG9yIHJlbW92ZSBmaWx0ZXIKICAgICAgLm9uKCJjbGljayIsIGZ1bmN0aW9uIChkLCBmaWx0ZXIpIHsKICAgICAgICBoYW5kbGVGaWx0ZXJDbGljayh2bSwgZmlsdGVyLmRhdGEpOwogICAgICB9KS50ZXh0KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuZGF0YS5uYW1lICsgIiAvICIgKyBuRm9ybWF0dGVyKGQuZGF0YS5wYWNrZXRDb3VudCwgMikgKyAiIC8gIiArIGQuZGF0YS5wZXJjZW50YWdlICsgIiAlIjsKICAgICAgfSkgLy9zZXRzIHRleHQgcG9zaXRpb24KICAgICAgLmF0dHIoInRyYW5zZm9ybSIsIGZ1bmN0aW9uIChkLCBpbmRleCkgewogICAgICAgIHZhciBvZmZzZXQgPSAyOwogICAgICAgIHZhciBlbGVtZW50ID0gb3V0ZXJBcmMuY2VudHJvaWQoZCk7CiAgICAgICAgZWxlbWVudFswXSA9IHJhZGl1cyAqIChtaWRBbmdsZShkKSA8IE1hdGguUEkgPyAxIDogLTEpOyAvL2NoZWNrcyBpZiB0ZXh0IHBvc2l0aW9uIGlzIGFscmVhZHkgdGFrZW4KCiAgICAgICAgd2hpbGUgKGNoZWNrQ29sbGlzaW9ucyhlbGVtZW50LCB0ZXh0UG9zaXRpb25zKSkgewogICAgICAgICAgZWxlbWVudFsxXSArPSBvZmZzZXQ7CiAgICAgICAgfQoKICAgICAgICBlbGVtZW50LnB1c2gob2Zmc2V0KTsKICAgICAgICB0ZXh0UG9zaXRpb25zLnNldChpbmRleCwgZWxlbWVudCk7CiAgICAgICAgcmV0dXJuICJ0cmFuc2xhdGUoIiArIGVsZW1lbnRbMF0gKyAiLCIgKyBlbGVtZW50WzFdICsgIikiOwogICAgICB9KSAvL3NldHMgcG9zaXRpb24gb2YgdGV4dAogICAgICAuc3R5bGUoInRleHQtYW5jaG9yIiwgZnVuY3Rpb24gKGQpIHsKICAgICAgICB0aGlzLl9jdXJyZW50ID0gZDsKICAgICAgICByZXR1cm4gbWlkQW5nbGUoZCkgPCBNYXRoLlBJID8gInN0YXJ0IiA6ICJlbmQiOwogICAgICB9KS5zdHlsZSgiZmlsbCIsICJ2YXIoLS12LXRleHQtYmFzZSkiKTsgLy90cmFuc2l0aW9uIGlmIGRhdGEgaXMgdXBkYXRlZAoKICAgICAgdGV4dC50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkudGV4dChmdW5jdGlvbiAoZCkgewogICAgICAgIHRoaXMuX2N1cnJlbnQgPSB0aGlzLl9jdXJyZW50IHx8IGQ7CiAgICAgICAgcmV0dXJuIGQuZGF0YS5uYW1lICsgIiB8ICIgKyBuRm9ybWF0dGVyKGQuZGF0YS5wYWNrZXRDb3VudCwgMikgKyAiIHwgIiArIGQuZGF0YS5wZXJjZW50YWdlICsgIiAlIjsKICAgICAgfSkuYXR0cigib3BhY2l0eSIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgaWYgKCF2bS5maWx0ZXJTZXQgfHwgdm0uZmlsdGVyU2V0LnNpemUgPT0gMCAmJiB2bS5uZWdhdGl2ZUZpbHRlclNldC5zaXplID09IDAgfHwgaXNGaWx0ZXJlZChkLmRhdGEsIHZtKSkgewogICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gMC40OwogICAgICB9KSAvL2N1c3RvbSBpbnRlcnBvbGF0aW9uZnVuY3Rpb24KICAgICAgLmF0dHJUd2VlbigidHJhbnNmb3JtIiwgZnVuY3Rpb24gKGQsIGluZGV4KSB7CiAgICAgICAgdmFyIG9mZnNldCA9IDI7CiAgICAgICAgdGhpcy5fY3VycmVudCA9IHRoaXMuX2N1cnJlbnQgfHwgZDsKICAgICAgICB2YXIgaW50ZXJwb2xhdGUgPSBkMy5pbnRlcnBvbGF0ZSh0aGlzLl9jdXJyZW50LCBkKTsKICAgICAgICB0aGlzLl9jdXJyZW50ID0gaW50ZXJwb2xhdGUoMCk7CiAgICAgICAgdmFyIGVsZW1lbnQgPSBvdXRlckFyYy5jZW50cm9pZChpbnRlcnBvbGF0ZSgxKSk7CiAgICAgICAgZWxlbWVudFswXSA9IHJhZGl1cyAqIChtaWRBbmdsZShpbnRlcnBvbGF0ZSgxKSkgPCBNYXRoLlBJID8gMSA6IC0xKTsKICAgICAgICB2YXIgaiA9IDA7IC8vIGNoZWNrcyBmb3IgY29sbGlzaW9uCgogICAgICAgIHdoaWxlIChjaGVja0NvbGxpc2lvbnMoZWxlbWVudCwgdGV4dFBvc2l0aW9ucykpIHsKICAgICAgICAgIGVsZW1lbnRbMV0gKz0gb2Zmc2V0OwogICAgICAgICAgaisrOwogICAgICAgIH0KCiAgICAgICAgb2Zmc2V0ID0gaiAqIG9mZnNldDsKICAgICAgICBlbGVtZW50LnB1c2gob2Zmc2V0KTsKICAgICAgICB0ZXh0UG9zaXRpb25zLnNldChpbmRleCwgZWxlbWVudCk7CiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICh0KSB7CiAgICAgICAgICB2YXIgZDIgPSBpbnRlcnBvbGF0ZSh0KTsKICAgICAgICAgIHZhciBwb3MgPSBvdXRlckFyYy5jZW50cm9pZChkMik7CiAgICAgICAgICBwb3NbMF0gPSByYWRpdXMgKiAobWlkQW5nbGUoZDIpIDwgTWF0aC5QSSA/IDEgOiAtMSk7CiAgICAgICAgICBwb3NbMV0gKz0gdGV4dFBvc2l0aW9ucy5nZXQoaW5kZXgpWzJdOwogICAgICAgICAgcmV0dXJuICJ0cmFuc2xhdGUoIiArIHBvc1swXSArICIsIiArIHBvc1sxXSArICIpIjsKICAgICAgICB9OwogICAgICB9KS5zdHlsZVR3ZWVuKCJ0ZXh0LWFuY2hvciIsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgdGhpcy5fY3VycmVudCA9IHRoaXMuX2N1cnJlbnQgfHwgZDsKICAgICAgICB2YXIgaW50ZXJwb2xhdGUgPSBkMy5pbnRlcnBvbGF0ZSh0aGlzLl9jdXJyZW50LCBkKTsKICAgICAgICB0aGlzLl9jdXJyZW50ID0gaW50ZXJwb2xhdGUoMCk7CiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICh0KSB7CiAgICAgICAgICB2YXIgZDIgPSBpbnRlcnBvbGF0ZSh0KTsgLy9zZXRzIHBvc2l0aW9uIG9mIHRleHQKCiAgICAgICAgICByZXR1cm4gbWlkQW5nbGUoZDIpIDwgTWF0aC5QSSA/ICJzdGFydCIgOiAiZW5kIjsKICAgICAgICB9OwogICAgICB9KTsgLy9yZW1vdmUgdGV4dCBpZiBtYXBwZWQgZGF0YSBpcyBub3QgYXZhaWxhYmxlIGFueW1vcmUKCiAgICAgIHRleHQuZXhpdCgpLnJlbW92ZSgpOyAvL2NyZWF0ZSBwb2x5bGluZXMgc2FtZSBwcm9jZWR1cmUgYXMgZm9yIHRleHQKCiAgICAgIHZhciBwb2x5bGluZSA9IHN2Zy5zZWxlY3QoIi5saW5lcyIgKyB0aGlzLmNoYXJ0TnVtYmVyKS5zZWxlY3RBbGwoInBvbHlsaW5lIikuZGF0YShwaWUoZGF0YSksIGtleSk7CiAgICAgIHBvbHlsaW5lLmVudGVyKCkuYXBwZW5kKCJwb2x5bGluZSIpLmF0dHIoInBvaW50cyIsIGZ1bmN0aW9uIChkLCBpbmRleCkgewogICAgICAgIHRoaXMuX2N1cnJlbnQgPSB0aGlzLl9jdXJyZW50IHx8IGQ7CiAgICAgICAgdmFyIG9mZnNldCA9IDI7CiAgICAgICAgdmFyIGVsZW1lbnQgPSBvdXRlckFyYy5jZW50cm9pZChkKTsKICAgICAgICBlbGVtZW50WzBdID0gcmFkaXVzICogMC45NSAqIChtaWRBbmdsZShkKSA8IE1hdGguUEkgPyAxIDogLTEpOwogICAgICAgIHZhciBqID0gMDsKCiAgICAgICAgd2hpbGUgKGNoZWNrQ29sbGlzaW9ucyhlbGVtZW50LCBsaW5lUG9zaXRpb25zKSkgewogICAgICAgICAgZWxlbWVudFsxXSArPSBvZmZzZXQ7CiAgICAgICAgICBqKys7CiAgICAgICAgfQoKICAgICAgICBvZmZzZXQgPSBqICogb2Zmc2V0OwogICAgICAgIGVsZW1lbnQucHVzaChvZmZzZXQpOwogICAgICAgIGxpbmVQb3NpdGlvbnMuc2V0KGluZGV4LCBlbGVtZW50KTsKICAgICAgICByZXR1cm4gW2FyYy5jZW50cm9pZChkKSwgb3V0ZXJBcmMuY2VudHJvaWQoZCksIFtlbGVtZW50WzBdLCBbZWxlbWVudFsxXV1dXTsKICAgICAgfSkuYXR0cigic3Ryb2tlLXdpZHRoIiwgIjJweCIpLmF0dHIoImZpbGwiLCAibm9uZSIpLnN0eWxlKCJzdHJva2UiLCAidmFyKC0tdi10ZXJ0aWFyeS1iYXNlKSIpOwogICAgICBwb2x5bGluZS50cmFuc2l0aW9uKCkuZHVyYXRpb24oMTAwMCkuYXR0clR3ZWVuKCJwb2ludHMiLCBmdW5jdGlvbiAoZCwgaW5kZXgpIHsKICAgICAgICB0aGlzLl9jdXJyZW50ID0gdGhpcy5fY3VycmVudCB8fCBkOwogICAgICAgIHZhciBpbnRlcnBvbGF0ZSA9IGQzLmludGVycG9sYXRlKHRoaXMuX2N1cnJlbnQsIGQpOwogICAgICAgIHRoaXMuX2N1cnJlbnQgPSBpbnRlcnBvbGF0ZSgwKTsKICAgICAgICB2YXIgZWxlbWVudCA9IG91dGVyQXJjLmNlbnRyb2lkKGludGVycG9sYXRlKDEpKTsKICAgICAgICBlbGVtZW50WzBdID0gcmFkaXVzICogMC45NSAqIChtaWRBbmdsZShpbnRlcnBvbGF0ZSgxKSkgPCBNYXRoLlBJID8gMSA6IC0xKTsKICAgICAgICB2YXIgaiA9IDA7CiAgICAgICAgdmFyIG9mZnNldCA9IDI7CgogICAgICAgIHdoaWxlIChjaGVja0NvbGxpc2lvbnMoZWxlbWVudCwgbGluZVBvc2l0aW9ucykpIHsKICAgICAgICAgIGVsZW1lbnRbMV0gKz0gb2Zmc2V0OwogICAgICAgICAgaisrOwogICAgICAgIH0KCiAgICAgICAgb2Zmc2V0ID0gaiAqIG9mZnNldDsKICAgICAgICBlbGVtZW50LnB1c2gob2Zmc2V0KTsKICAgICAgICBsaW5lUG9zaXRpb25zLnNldChpbmRleCwgZWxlbWVudCk7CiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICh0KSB7CiAgICAgICAgICB2YXIgZDIgPSBpbnRlcnBvbGF0ZSh0KTsKICAgICAgICAgIHZhciBwb3MgPSBvdXRlckFyYy5jZW50cm9pZChkMik7CiAgICAgICAgICBwb3NbMV0gPSBwb3NbMV0gKyBsaW5lUG9zaXRpb25zLmdldChpbmRleClbMl07CiAgICAgICAgICBwb3NbMF0gPSByYWRpdXMgKiAwLjk1ICogKG1pZEFuZ2xlKGQyKSA8IE1hdGguUEkgPyAxIDogLTEpOwogICAgICAgICAgcmV0dXJuIFthcmMuY2VudHJvaWQoZDIpLCBvdXRlckFyYy5jZW50cm9pZChkMiksIHBvc107CiAgICAgICAgfTsKICAgICAgfSkuYXR0cigic3Ryb2tlLXdpZHRoIiwgIjJweCIpLmF0dHIoImZpbGwiLCAibm9uZSIpLnN0eWxlKCJzdHJva2UiLCAidmFyKC0tdi10ZXJ0aWFyeS1iYXNlKSIpOwogICAgICBwb2x5bGluZS5leGl0KCkucmVtb3ZlKCk7CiAgICAgIC8qKgogICAgICAgKiBDaGVja3MgZm9yIGNvbGxpc2lvbnMgb2YgdGV4dCBvciBwb2x5bGluZXMKICAgICAgICovCgogICAgICBmdW5jdGlvbiBjaGVja0NvbGxpc2lvbnMoZWxlbWVudCwgcG9zaXRpb25zKSB7CiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGRhdGEuc2l6ZSB8fCBpbmRleCA8IHBvc2l0aW9ucy5zaXplOyBpbmRleCsrKSB7CiAgICAgICAgICBpZiAoIXBvc2l0aW9ucy5oYXMoaW5kZXgpKSB7CiAgICAgICAgICAgIHBvc2l0aW9ucy5zZXQoaW5kZXgsIFswLCAwXSk7CiAgICAgICAgICB9CgogICAgICAgICAgdmFyIHBvc2l0aW9uID0gcG9zaXRpb25zLmdldChpbmRleCk7CgogICAgICAgICAgaWYgKHBvc2l0aW9uWzBdICE9IGVsZW1lbnRbMF0pIHsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICB9CgogICAgICAgICAgdmFyIHgxLCB4MjsKCiAgICAgICAgICBpZiAocG9zaXRpb25bMV0gPD0gZWxlbWVudFsxXSkgewogICAgICAgICAgICB4MSA9IHBvc2l0aW9uWzFdOwogICAgICAgICAgICB4MiA9IGVsZW1lbnRbMV07CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB4MSA9IGVsZW1lbnRbMV07CiAgICAgICAgICAgIHgyID0gcG9zaXRpb25bMV07CiAgICAgICAgICB9CgogICAgICAgICAgdmFyIGRpc3RhbmNlID0gTWF0aC5zcXJ0KE1hdGgucG93KHgyIC0geDEsIDIpKTsKCiAgICAgICAgICBpZiAoZGlzdGFuY2UgPCAxOCkgewogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIENoZWNrcyBpZiB0aGUgb3BhY2l0eSBvZiB0aGUgc2xpY2VzIG5lZWRzIHRvIGJlIGNoYW5nZWQKICAgICAqLwogICAgY2hhbmdlRmlsdGVyOiBmdW5jdGlvbiBjaGFuZ2VGaWx0ZXIoKSB7CiAgICAgIHZhciB2bSA9IHRoaXM7CiAgICAgIGQzLnNlbGVjdCgiIyIgKyB0aGlzLmlkKS5zZWxlY3QoImciKS5zZWxlY3QoImcuc2xpY2VzIiArIHRoaXMuY2hhcnROdW1iZXIpLnNlbGVjdEFsbCgicGF0aCIpLmF0dHIoIm9wYWNpdHkiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIGlmICghdm0uZmlsdGVyU2V0IHx8IHZtLmZpbHRlclNldC5zaXplID09IDAgJiYgdm0ubmVnYXRpdmVGaWx0ZXJTZXQuc2l6ZSA9PSAwIHx8IGlzRmlsdGVyZWQoZC5kYXRhLCB2bSkpIHsKICAgICAgICAgIHJldHVybiAxOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIDAuNTsKICAgICAgfSk7CiAgICAgIGQzLnNlbGVjdCgiIyIgKyB0aGlzLmlkKS5zZWxlY3QoImciKS5zZWxlY3QoImcubGFiZWxzIiArIHRoaXMuY2hhcnROdW1iZXIpLnNlbGVjdEFsbCgidGV4dCIpLmF0dHIoIm9wYWNpdHkiLCBmdW5jdGlvbiAoZCkgewogICAgICAgIGlmICghdm0uZmlsdGVyU2V0IHx8IHZtLmZpbHRlclNldC5zaXplID09IDAgJiYgdm0ubmVnYXRpdmVGaWx0ZXJTZXQuc2l6ZSA9PSAwIHx8IGlzRmlsdGVyZWQoZC5kYXRhLCB2bSkpIHsKICAgICAgICAgIHJldHVybiAxOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIDAuNTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["PieChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card>\n    <ChartControls v-bind:chartNumber=\"chartNumber\" class=\"mb-0\" />\n    <v-progress-circular\n      v-if=\"loading && !isFrozen\"\n      indeterminate\n      color=\"success\"\n    ></v-progress-circular>\n    <div class=\"tooltip\" :id=\"tooltipId\">\"></div>\n    <svg :id=\"id\" viewBox=\"0 0 800 450\"></svg>\n  </v-card>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport ChartControls from \"../ChartControls.vue\";\nimport {\n  handleFilterClick,\n  isFiltered,\n  nFormatter,\n} from \"../../helperFunctions/graphHelperFunctions\";\n\nexport default {\n  components: { ChartControls },\n\n  name: \"PieChart\",\n  props: {\n    data: {\n      required: true,\n    },\n    width: {\n      default: 800,\n      type: Number,\n    },\n    height: {\n      default: 450,\n      type: Number,\n    },\n    chartNumber: {\n      required: true,\n      type: Number,\n    },\n    isSummary: {\n      required: true,\n      type: Boolean,\n    },\n    isFrozen: {\n      required: true,\n      type: Boolean,\n    },\n  },\n\n  data: () => ({\n    margin: { top: 0, right: 0, bottom: 0, left: 0 },\n  }),\n\n  computed: {\n    id() {\n      return \"chart\" + this.chartNumber.toString();\n    },\n\n    tooltipId() {\n      return \"tooltip\" + this.chartNumber.toString();\n    },\n\n    filterSet() {\n      return this.$store.getters[\"filterByType\"](this.data.filterType);\n    },\n\n    negativeFilterSet() {\n      return this.$store.getters[\"negativeFilterByType\"](this.data.filterType);\n    },\n    payload() {\n      return this.data.payload;\n    },\n    loading() {\n      return this.data.loading;\n    },\n\n    chartWidth() {\n      return this.width - this.margin.left - this.margin.right;\n    },\n    chartHeight() {\n      return this.height - this.margin.top - this.margin.bottom;\n    },\n  },\n  watch: {\n    payload: function () {\n      if (this.isFrozen) {\n        return;\n      } else {\n        this.updateChart();\n      }\n    },\n\n    isFrozen() {\n      if (this.isFrozen) {\n        return;\n      } else {\n        this.updateChart();\n      }\n    },\n\n    filterSet: function () {\n      this.changeFilter();\n    },\n    negativeFilterSet: function () {\n      this.changeFilter();\n    },\n  },\n\n  mounted() {\n    this.createPieChart();\n    this.updateChart();\n  },\n  methods: {\n    /**\n     * Creates groups for chart\n     */\n    createPieChart() {\n      var svg = d3.select(\"#\" + this.id).append(\"g\");\n      svg.attr(\n        \"transform\",\n        \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\"\n      );\n\n      var content = svg.append(\"g\").attr(\"class\", \"content\" + this.chartNumber);\n\n      content.append(\"g\").attr(\"class\", \"slices\" + this.chartNumber);\n      content.append(\"g\").attr(\"class\", \"labels\" + this.chartNumber);\n      content.append(\"g\").attr(\"class\", \"lines\" + this.chartNumber);\n\n      content.attr(\n        \"transform\",\n        \"translate(\" + this.chartWidth / 2 + \",\" + this.chartHeight / 2 + \")\"\n      );\n    },\n    /**\n     * Inserts data to chart and creates chart objects\n     */\n    updateChart() {\n      let tooltip = d3.select(\"#\" + this.tooltipId);\n      const vm = this;\n\n      var radius = Math.min(this.chartWidth, this.chartHeight) / 2;\n\n      // set color domain for values\n      var svg = d3.select(\"#\" + this.id);\n      var color = d3\n        .scaleOrdinal()\n        .domain(\n          this.payload.map(function (d) {\n            return d.name;\n          })\n        )\n        .range([\n          \"var(--v-primary-base)\",\n          \"var(--v-secondary-base)\",\n          \"var(--v-tertiary-base)\",\n          \"var(--v-quaternary-base)\",\n          \"var(--v-quinary-darken1)\",\n        ]);\n\n      // calculate sum of al values\n      var globalPacketCount = this.payload.reduce(function (a, b) {\n        return a + b.value;\n      }, 0);\n      // prepare data for chart\n      var data = this.payload.map(function (label) {\n        var packetCount = label.value;\n        return {\n          name: label.name,\n          packetCount: packetCount,\n          percentage: ((packetCount / globalPacketCount) * 100).toFixed(1),\n        };\n      });\n\n      // create pie scaling values\n      var pie = d3\n        .pie()\n        .sort(null)\n        .value(function (d) {\n          return d.packetCount * 1.1;\n        })\n        .padAngle(0.025);\n\n      var arc = d3\n        .arc()\n        .outerRadius(radius * 0.8)\n        .innerRadius(radius * 0.4);\n\n      var outerArc = d3\n        .arc()\n        .innerRadius(radius * 0.9)\n        .outerRadius(radius * 0.9);\n\n      var key = function (d) {\n        return d.data.name;\n      };\n\n      // create slices\n      var slice = svg\n        .select(\"g.slices\" + this.chartNumber)\n        .selectAll(\"path\")\n        .data(pie(data, key));\n\n      slice\n        .enter()\n        .insert(\"path\")\n        .style(\"fill\", function (d) {\n          return color(d.data.name);\n        })\n        .attr(\"d\", function (d) {\n          this._current = d;\n          return arc(d);\n        })\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          } else {\n            return 0.5;\n          }\n        })\n        // add or remove filter\n        .on(\"click\", function (d, filter) {\n          handleFilterClick(vm, filter.data);\n        })\n        // show tooltip\n        .on(\"mouseover\", function (event, d) {\n          var [x, y] = d3.pointer(event, svg.node());\n          var svgDim = svg.node().getBoundingClientRect();\n          var left = (svgDim.width / vm.chartWidth) * x;\n          var top = (svgDim.height / vm.chartHeight) * y;\n          let value = d.data.packetCount\n            .toString()\n            .replace(/\\B(?=(d{3})+(?!\\d))/g, \",\");\n          tooltip.transition().duration(1000).style(\"opacity\", 0.8);\n          tooltip\n            .html(\n              '<p class=\"subtitle-2 white--text\">' +\n                d.data.name +\n                \" | \" +\n                nFormatter(value, 2) +\n                \" | \" +\n                d.data.percentage +\n                \" %</p>\"\n            )\n            .style(\"left\", left + \"px\")\n            .style(\"top\", top + \"px\");\n        })\n        .on(\"mouseout\", function () {\n          tooltip.transition().duration(500).style(\"opacity\", 0);\n        });\n\n      //transition if data is updated\n      slice\n        .transition()\n        .duration(1000)\n        // custom interpolation function for transition\n        .attrTween(\"d\", function (d) {\n          this._current = this._current || d;\n          var interpolate = d3.interpolate(this._current, d);\n          this._current = interpolate(0);\n          return function (t) {\n            return arc(interpolate(t));\n          };\n        })\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          } else {\n            return 0.4;\n          }\n        });\n\n      //remove slices if mapped data is not available anymore\n      slice.exit().remove();\n\n      //maps for collision check\n      var textPositions = new Map();\n      var linePositions = new Map();\n\n      //create text\n      var text = svg\n        .select(\".labels\" + this.chartNumber)\n        .selectAll(\"text\")\n        .data(pie(data), key);\n      function midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n      }\n\n      text\n        .enter()\n        .append(\"text\")\n        .attr(\"dy\", \".35em\")\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          }\n          return 0.4;\n        })\n        // add or remove filter\n        .on(\"click\", function (d, filter) {\n          handleFilterClick(vm, filter.data);\n        })\n        .text(function (d) {\n          return (\n            d.data.name +\n            \" / \" +\n            nFormatter(d.data.packetCount, 2) +\n            \" / \" +\n            d.data.percentage +\n            \" %\"\n          );\n        })\n        //sets text position\n        .attr(\"transform\", function (d, index) {\n          var offset = 2;\n          var element = outerArc.centroid(d);\n          element[0] = radius * (midAngle(d) < Math.PI ? 1 : -1);\n          //checks if text position is already taken\n          while (checkCollisions(element, textPositions)) {\n            element[1] += offset;\n          }\n          element.push(offset);\n          textPositions.set(index, element);\n          return \"translate(\" + element[0] + \",\" + element[1] + \")\";\n        })\n        //sets position of text\n        .style(\"text-anchor\", function (d) {\n          this._current = d;\n          return midAngle(d) < Math.PI ? \"start\" : \"end\";\n        })\n        .style(\"fill\", \"var(--v-text-base)\");\n\n      //transition if data is updated\n      text\n        .transition()\n        .duration(1000)\n        .text(function (d) {\n          this._current = this._current || d;\n          return (\n            d.data.name +\n            \" | \" +\n            nFormatter(d.data.packetCount, 2) +\n            \" | \" +\n            d.data.percentage +\n            \" %\"\n          );\n        })\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          }\n          return 0.4;\n        })\n        //custom interpolationfunction\n        .attrTween(\"transform\", function (d, index) {\n          var offset = 2;\n          this._current = this._current || d;\n          var interpolate = d3.interpolate(this._current, d);\n          this._current = interpolate(0);\n          var element = outerArc.centroid(interpolate(1));\n          element[0] = radius * (midAngle(interpolate(1)) < Math.PI ? 1 : -1);\n          var j = 0;\n          // checks for collision\n          while (checkCollisions(element, textPositions)) {\n            element[1] += offset;\n            j++;\n          }\n          offset = j * offset;\n          element.push(offset);\n          textPositions.set(index, element);\n          return function (t) {\n            var d2 = interpolate(t);\n            var pos = outerArc.centroid(d2);\n            pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n            pos[1] += textPositions.get(index)[2];\n            return \"translate(\" + pos[0] + \",\" + pos[1] + \")\";\n          };\n        })\n        .styleTween(\"text-anchor\", function (d) {\n          this._current = this._current || d;\n          var interpolate = d3.interpolate(this._current, d);\n          this._current = interpolate(0);\n          return function (t) {\n            var d2 = interpolate(t);\n            //sets position of text\n            return midAngle(d2) < Math.PI ? \"start\" : \"end\";\n          };\n        });\n\n      //remove text if mapped data is not available anymore\n      text.exit().remove();\n\n      //create polylines same procedure as for text\n      var polyline = svg\n        .select(\".lines\" + this.chartNumber)\n        .selectAll(\"polyline\")\n        .data(pie(data), key);\n\n      polyline\n        .enter()\n        .append(\"polyline\")\n        .attr(\"points\", function (d, index) {\n          this._current = this._current || d;\n          var offset = 2;\n          var element = outerArc.centroid(d);\n          element[0] = radius * 0.95 * (midAngle(d) < Math.PI ? 1 : -1);\n          var j = 0;\n          while (checkCollisions(element, linePositions)) {\n            element[1] += offset;\n            j++;\n          }\n          offset = j * offset;\n          element.push(offset);\n          linePositions.set(index, element);\n\n          return [\n            arc.centroid(d),\n            outerArc.centroid(d),\n            [element[0], [element[1]]],\n          ];\n        })\n        .attr(\"stroke-width\", \"2px\")\n        .attr(\"fill\", \"none\")\n        .style(\"stroke\", \"var(--v-tertiary-base)\");\n\n      polyline\n        .transition()\n        .duration(1000)\n        .attrTween(\"points\", function (d, index) {\n          this._current = this._current || d;\n          var interpolate = d3.interpolate(this._current, d);\n          this._current = interpolate(0);\n          var element = outerArc.centroid(interpolate(1));\n          element[0] =\n            radius * 0.95 * (midAngle(interpolate(1)) < Math.PI ? 1 : -1);\n          var j = 0;\n          var offset = 2;\n          while (checkCollisions(element, linePositions)) {\n            element[1] += offset;\n            j++;\n          }\n          offset = j * offset;\n          element.push(offset);\n          linePositions.set(index, element);\n\n          return function (t) {\n            var d2 = interpolate(t);\n            var pos = outerArc.centroid(d2);\n            pos[1] = pos[1] + linePositions.get(index)[2];\n            pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n            return [arc.centroid(d2), outerArc.centroid(d2), pos];\n          };\n        })\n        .attr(\"stroke-width\", \"2px\")\n        .attr(\"fill\", \"none\")\n        .style(\"stroke\", \"var(--v-tertiary-base)\");\n\n      polyline.exit().remove();\n\n      /**\n       * Checks for collisions of text or polylines\n       */\n      function checkCollisions(element, positions) {\n        for (\n          let index = 0;\n          index < data.size || index < positions.size;\n          index++\n        ) {\n          if (!positions.has(index)) {\n            positions.set(index, [0, 0]);\n          }\n          const position = positions.get(index);\n          if (position[0] != element[0]) {\n            continue;\n          }\n          var x1, x2;\n          if (position[1] <= element[1]) {\n            x1 = position[1];\n            x2 = element[1];\n          } else {\n            x1 = element[1];\n            x2 = position[1];\n          }\n          var distance = Math.sqrt(Math.pow(x2 - x1, 2));\n          if (distance < 18) {\n            return true;\n          }\n        }\n        return false;\n      }\n    },\n\n    /**\n     * Checks if the opacity of the slices needs to be changed\n     */\n    changeFilter() {\n      const vm = this;\n      d3.select(\"#\" + this.id)\n        .select(\"g\")\n        .select(\"g.slices\" + this.chartNumber)\n        .selectAll(\"path\")\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          }\n          return 0.5;\n        });\n      d3.select(\"#\" + this.id)\n        .select(\"g\")\n        .select(\"g.labels\" + this.chartNumber)\n        .selectAll(\"text\")\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          }\n          return 0.5;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n>>> polyline {\n  opacity: 0.8;\n  stroke: black;\n  stroke-width: 2px;\n  fill: none;\n}\n\n>>> path.slice {\n  stroke-width: 300px;\n}\n</style>\n\n"],"sourceRoot":"src/components/chartComponents"}]}