{"remainingRequest":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js!/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/someone/projects/pythia/client/src/components/chartComponents/PieChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/someone/projects/pythia/client/src/components/chartComponents/PieChart.vue","mtime":1643621332099},{"path":"/home/someone/projects/pythia/client/babel.config.js","mtime":1640282409286},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js","mtime":1643623769914},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js","mtime":1643623769500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PieChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card>\n    <ChartControls v-bind:chartNumber=\"chartNumber\" class=\"mb-0\" />\n    <v-progress-circular\n      v-if=\"loading && !isFrozen\"\n      indeterminate\n      color=\"success\"\n    ></v-progress-circular>\n    <div class=\"tooltip\" :id=\"tooltipId\">\"></div>\n    <svg :id=\"id\" viewBox=\"0 0 800 450\"></svg>\n  </v-card>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport ChartControls from \"../ChartControls.vue\";\nimport {\n  handleFilterClick,\n  isFiltered,\n  nFormatter,\n} from \"../../helperFunctions/graphHelperFunctions\";\n\nexport default {\n  components: { ChartControls },\n\n  name: \"PieChart\",\n  props: {\n    data: {\n      required: true,\n    },\n    width: {\n      default: 800,\n      type: Number,\n    },\n    height: {\n      default: 450,\n      type: Number,\n    },\n    chartNumber: {\n      required: true,\n      type: Number,\n    },\n    isSummary: {\n      required: true,\n      type: Boolean,\n    },\n    isFrozen: {\n      required: true,\n      type: Boolean,\n    },\n  },\n\n  data: () => ({\n    margin: { top: 0, right: 0, bottom: 0, left: 0 },\n  }),\n\n  computed: {\n    id() {\n      return \"chart\" + this.chartNumber.toString();\n    },\n\n    tooltipId() {\n      return \"tooltip\" + this.chartNumber.toString();\n    },\n\n    filterSet() {\n      return this.$store.getters[\"filterByType\"](this.data.filterType);\n    },\n\n    negativeFilterSet() {\n      return this.$store.getters[\"negativeFilterByType\"](this.data.filterType);\n    },\n    payload() {\n      return this.data.payload;\n    },\n    loading() {\n      return this.data.loading;\n    },\n\n    chartWidth() {\n      return this.width - this.margin.left - this.margin.right;\n    },\n    chartHeight() {\n      return this.height - this.margin.top - this.margin.bottom;\n    },\n\n  },\n  watch: {\n    payload: function () {\n      if (this.isFrozen) {\n        return;\n      } else {\n        this.updateChart();\n      }\n    },\n\n    isFrozen() {\n      if (this.isFrozen) {\n        return;\n      } else {\n        this.updateChart();\n      }\n    },\n\n    filterSet: function () {\n      this.changeFilter();\n    },\n    negativeFilterSet: function () {\n      this.changeFilter();\n    },\n  },\n\n  mounted() {\n    this.createPieChart();\n  },\n  methods: {\n    createPieChart() {\n      var svg = d3.select(\"#\" + this.id).append(\"g\");\n      svg.attr(\n        \"transform\",\n        \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\"\n      );\n\n      var content = svg.append(\"g\").attr(\"class\", \"content\" + this.chartNumber);\n\n      content.append(\"g\").attr(\"class\", \"slices\" + this.chartNumber);\n      content.append(\"g\").attr(\"class\", \"labels\" + this.chartNumber);\n      content.append(\"g\").attr(\"class\", \"lines\" + this.chartNumber);\n\n      content.attr(\n        \"transform\",\n        \"translate(\" + this.chartWidth / 2 + \",\" + this.chartHeight / 2 + \")\"\n      );\n    },\n\n    updateChart() {\n      let tooltip = d3.select(\"#\" + this.tooltipId);\n      const vm = this;\n      var radius = Math.min(this.chartWidth, this.chartHeight) / 2;\n      var svg = d3.select(\"#\" + this.id);\n      var color = d3\n        .scaleOrdinal()\n        .domain(\n          this.payload.map(function (d) {\n            return d.name;\n          })\n        )\n        .range([\n          \"var(--v-primary-base)\",\n          \"var(--v-secondary-base)\",\n          \"var(--v-tertiary-base)\",\n          \"var(--v-quaternary-base)\",\n          \"var(--v-quinary-darken1)\",\n        ]);\n\n      var globalPacketCount = this.payload.reduce(function (a, b) {\n        return a + b.value;\n      }, 0);\n\n      var data = this.payload.map(function (label) {\n        var packetCount = label.value;\n        return {\n          name: label.name,\n          packetCount: packetCount,\n          percentage: ((packetCount / globalPacketCount) * 100).toFixed(1),\n        };\n      });\n\n      var pie = d3\n        .pie()\n        .sort(null)\n        .value(function (d) {\n          return d.packetCount * 1.1;\n        })\n        .padAngle(0.025);\n\n      var arc = d3\n        .arc()\n        .outerRadius(radius * 0.8)\n        .innerRadius(radius * 0.4);\n\n      var outerArc = d3\n        .arc()\n        .innerRadius(radius * 0.9)\n        .outerRadius(radius * 0.9);\n\n      var key = function (d) {\n        return d.data.name;\n      };\n\n      var slice = svg\n        .select(\"g.slices\" + this.chartNumber)\n        .selectAll(\"path\")\n        .data(pie(data, key));\n\n      slice\n        .enter()\n        .insert(\"path\")\n        .style(\"fill\", function (d) {\n          return color(d.data.name);\n        })\n        .attr(\"d\", function (d) {\n          this._current = d;\n          return arc(d);\n        })\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          } else {\n            return 0.5;\n          }\n        })\n        .on(\"click\", function (d, filter) {\n          handleFilterClick(vm, filter.data);\n        })\n        .on(\"mouseover\", function (event, d) {\n          var [x, y] = d3.pointer(event, svg.node());\n          var svgDim = svg.node().getBoundingClientRect();\n\n          var left = (svgDim.width / vm.chartWidth) * x;\n          var top = (svgDim.height / vm.chartHeight) * y;\n          let value = d.data.packetCount\n            .toString()\n            .replace(/\\B(?=(d{3})+(?!\\d))/g, \",\");\n          tooltip.transition().duration(1000).style(\"opacity\", 0.8);\n          tooltip\n            .html(\n              '<p class=\"subtitle-2 white--text\">' +\n                d.data.name +\n                \" | \" +\n                nFormatter(value, 2) +\n                \" | \" +\n                d.data.percentage +\n                \" %</p>\"\n            )\n            .style(\"left\", left + \"px\")\n            .style(\"top\", top + \"px\");\n        })\n        .on(\"mouseout\", function () {\n          tooltip.transition().duration(500).style(\"opacity\", 0);\n        });\n      slice\n        .transition()\n        .duration(1000)\n        .attrTween(\"d\", function (d) {\n          this._current = this._current || d;\n          var interpolate = d3.interpolate(this._current, d);\n          this._current = interpolate(0);\n          return function (t) {\n            return arc(interpolate(t));\n          };\n        })\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          } else {\n            return 0.4;\n          }\n        });\n\n      slice.exit().remove();\n      /* ------- TEXT LABELS -------*/\n\n      var textPositions = new Map();\n      var linePositions = new Map();\n\n      var text = svg\n        .select(\".labels\" + this.chartNumber)\n        .selectAll(\"text\")\n        .data(pie(data), key);\n      function midAngle(d) {\n        return d.startAngle + (d.endAngle - d.startAngle) / 2;\n      }\n\n      text\n        .enter()\n        .append(\"text\")\n        .attr(\"dy\", \".35em\")\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          }\n          return 0.4;\n        })\n        .on(\"click\", function (d, filter) {\n          handleFilterClick(vm, filter.data);\n        })\n        .text(function (d) {\n          return (\n            d.data.name +\n            \" / \" +\n            nFormatter(d.data.packetCount, 2) +\n            \" / \" +\n            d.data.percentage +\n            \" %\"\n          );\n        })\n        .attr(\"transform\", function (d, index) {\n          var offset = 2;\n          var element = outerArc.centroid(d);\n          element[0] = radius * (midAngle(d) < Math.PI ? 1 : -1);\n          while (checkCollisions(element, textPositions)) {\n            element[1] += offset;\n          }\n          element.push(offset);\n          textPositions.set(index, element);\n          return \"translate(\" + element[0] + \",\" + element[1] + \")\";\n        })\n        .style(\"text-anchor\", function (d) {\n          this._current = d;\n          return midAngle(d) < Math.PI ? \"start\" : \"end\";\n        })\n        .style(\"fill\", \"var(--v-text-base)\");\n\n      text\n        .transition()\n        .duration(1000)\n        .text(function (d) {\n          this._current = this._current || d;\n          return (\n            d.data.name +\n            \" | \" +\n            nFormatter(d.data.packetCount, 2) +\n            \" | \" +\n            d.data.percentage +\n            \" %\"\n          );\n        })\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          }\n          return 0.4;\n        })\n\n        .attrTween(\"transform\", function (d, index) {\n          var offset = 2;\n          this._current = this._current || d;\n          var interpolate = d3.interpolate(this._current, d);\n          this._current = interpolate(0);\n          var element = outerArc.centroid(interpolate(1));\n          element[0] = radius * (midAngle(interpolate(1)) < Math.PI ? 1 : -1);\n          var j = 0;\n          while (checkCollisions(element, textPositions)) {\n            element[1] += offset;\n            j++;\n          }\n          offset = j * offset;\n          element.push(offset);\n          textPositions.set(index, element);\n          return function (t) {\n            var d2 = interpolate(t);\n            var pos = outerArc.centroid(d2);\n            pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);\n            pos[1] += textPositions.get(index)[2];\n            return \"translate(\" + pos[0] + \",\" + pos[1] + \")\";\n          };\n        })\n        .styleTween(\"text-anchor\", function (d) {\n          this._current = this._current || d;\n          var interpolate = d3.interpolate(this._current, d);\n          this._current = interpolate(0);\n          return function (t) {\n            var d2 = interpolate(t);\n            return midAngle(d2) < Math.PI ? \"start\" : \"end\";\n          };\n        });\n\n      text.exit().remove();\n\n      /* ------- SLICE TO TEXT POLYLINES -------*/\n      var polyline = svg\n        .select(\".lines\" + this.chartNumber)\n        .selectAll(\"polyline\")\n        .data(pie(data), key);\n\n      polyline\n        .enter()\n        .append(\"polyline\")\n        .attr(\"points\", function (d, index) {\n          this._current = this._current || d;\n          var offset = 2;\n          var element = outerArc.centroid(d);\n          element[0] = radius * 0.95 * (midAngle(d) < Math.PI ? 1 : -1);\n          var j = 0;\n          while (checkCollisions(element, linePositions)) {\n            element[1] += offset;\n            j++;\n          }\n          offset = j * offset;\n          element.push(offset);\n          linePositions.set(index, element);\n\n          return [\n            arc.centroid(d),\n            outerArc.centroid(d),\n            [element[0], [element[1]]],\n          ];\n        })\n        .attr(\"stroke-width\", \"2px\")\n        .attr(\"fill\", \"none\")\n        .style(\"stroke\", \"var(--v-tertiary-base)\");\n\n      polyline\n        .transition()\n        .duration(1000)\n        .attrTween(\"points\", function (d, index) {\n          this._current = this._current || d;\n          var interpolate = d3.interpolate(this._current, d);\n          this._current = interpolate(0);\n          var element = outerArc.centroid(interpolate(1));\n          element[0] =\n            radius * 0.95 * (midAngle(interpolate(1)) < Math.PI ? 1 : -1);\n          var j = 0;\n          var offset = 2;\n          while (checkCollisions(element, linePositions)) {\n            element[1] += offset;\n            j++;\n          }\n          offset = j * offset;\n          element.push(offset);\n          linePositions.set(index, element);\n\n          return function (t) {\n            var d2 = interpolate(t);\n            var pos = outerArc.centroid(d2);\n            pos[1] = pos[1] + linePositions.get(index)[2];\n            pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);\n            return [arc.centroid(d2), outerArc.centroid(d2), pos];\n          };\n        })\n        .attr(\"stroke-width\", \"2px\")\n        .attr(\"fill\", \"none\")\n        .style(\"stroke\", \"var(--v-tertiary-base)\");\n\n      polyline.exit().remove();\n\n      function checkCollisions(element, positions) {\n        for (\n          let index = 0;\n          index < data.size || index < positions.size;\n          index++\n        ) {\n          if (!positions.has(index)) {\n            positions.set(index, [0, 0]);\n          }\n          const position = positions.get(index);\n          if (position[0] != element[0]) {\n            continue;\n          }\n          var x1, x2;\n          if (position[1] <= element[1]) {\n            x1 = position[1];\n            x2 = element[1];\n          } else {\n            x1 = element[1];\n            x2 = position[1];\n          }\n          var distance = Math.sqrt(Math.pow(x2 - x1, 2));\n          if (distance < 18) {\n            return true;\n          }\n        }\n        return false;\n      }\n    },\n    changeFilter() {\n      const vm = this;\n      d3.select(\"#\" + this.id)\n        .select(\"g\")\n        .select(\"g.slices\" + this.chartNumber)\n        .selectAll(\"path\")\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          }\n          return 0.5;\n        });\n      d3.select(\"#\" + this.id)\n        .select(\"g\")\n        .select(\"g.labels\" + this.chartNumber)\n        .selectAll(\"text\")\n        .attr(\"opacity\", function (d) {\n          if (\n            !vm.filterSet ||\n            (vm.filterSet.size == 0 && vm.negativeFilterSet.size == 0) ||\n            isFiltered(d.data, vm)\n          ) {\n            return 1;\n          }\n          return 0.5;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n>>> polyline {\n  opacity: 0.8;\n  stroke: black;\n  stroke-width: 2px;\n  fill: none;\n}\n\n>>> path.slice {\n  stroke-width: 300px;\n}\n</style>\n\n"],"sourceRoot":"src/components/chartComponents"}]}