{"remainingRequest":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js!/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/someone/projects/pythia/client/src/components/chartComponents/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/someone/projects/pythia/client/src/components/chartComponents/LineChart.vue","mtime":1643574596251},{"path":"/home/someone/projects/pythia/client/babel.config.js","mtime":1640282409286},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/babel-loader/lib/index.js","mtime":1643623769914},{"path":"/home/someone/projects/pythia/client/node_modules/cache-loader/dist/cjs.js","mtime":1643623769878},{"path":"/home/someone/projects/pythia/client/node_modules/vue-loader/lib/index.js","mtime":1643623769500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAaA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,OAAA,aAAA,MAAA,sBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,aAAA,EAAA;AAAA,GADA;AAGA,EAAA,IAAA,EAAA,WAHA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,QAAA,EAAA;AADA,KADA;AAIA,IAAA,KAAA,EAAA;AACA,MAAA,OAAA,EAAA,GADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAJA;AAQA,IAAA,MAAA,EAAA;AACA,MAAA,OAAA,EAAA,GADA;AAEA,MAAA,IAAA,EAAA;AAFA,KARA;AAYA,IAAA,WAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAZA;AAgBA,IAAA,SAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAhBA;AAoBA,IAAA,QAAA,EAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA;AApBA,GAJA;AA6BA,EAAA,OA7BA,qBA6BA;AACA,SAAA,eAAA;AACA,GA/BA;AAiCA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA;AAAA,QAAA,GAAA,EAAA,EAAA;AAAA,QAAA,KAAA,EAAA,EAAA;AAAA,QAAA,MAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAAA,GAjCA;AAsCA,EAAA,QAAA,EAAA;AACA,IAAA,EADA,gBACA;AACA,aAAA,UAAA,KAAA,WAAA,CAAA,QAAA,EAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,aAAA,KAAA,IAAA,CAAA,OAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,aAAA,KAAA,IAAA,CAAA,OAAA;AACA,KATA;AAUA,IAAA,UAVA,wBAUA;AACA,aAAA,KAAA,KAAA,GAAA,KAAA,MAAA,CAAA,IAAA,GAAA,KAAA,MAAA,CAAA,KAAA;AACA,KAZA;AAaA,IAAA,WAbA,yBAaA;AACA,aAAA,KAAA,MAAA,GAAA,KAAA,MAAA,CAAA,GAAA,GAAA,KAAA,MAAA,CAAA,MAAA;AACA;AAfA,GAtCA;AAyDA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA,UAAA,KAAA,QAAA,EAAA;AACA;AACA;;AACA,WAAA,WAAA;AACA,KANA;AAOA,IAAA,QAAA,EAAA,oBAAA;AACA,UAAA,KAAA,QAAA,EAAA;AACA;AACA,OAFA,MAGA;AACA,aAAA,WAAA;AACA;AACA;AAdA,GAzDA;AA0EA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,UAAA,GAAA,GAAA,EAAA,CACA,MADA,CACA,MAAA,KAAA,EADA,EAEA,MAFA,CAEA,GAFA,EAGA,IAHA,CAIA,WAJA,EAKA,ecAHA,EAIA,IAJA,CAIA,IAJA,EAIA,SAAA,KAAA,WAJA,EAKA,MALA,CAKA,UALA,EAMA,IANA,CAMA,OANA,EAMA,KAAA,UANA,EAOA,IAPA,CAOA,QAPA,EAOA,KAAA,WAPA,EAQA,IARA,CAQA,GARA,EAQA,CARA,EASA,IATA,CASA,GATA,EASA,CATA;AAWA,MAAA,GAAA,CACA,MADA,CACA,aAAA,KAAA,WADA,EAEA,MAFA,CAEA,GAFA,EAGA,IAHA,CAGA,WAHA,EAGA,cAAA,KAAA,WAAA,GAAA,GAHA,EAIA,MAJA,CAIA,MAJA,EAKA,IALA,CAKA,OALA,EAKA,MALA,EAKA;AALA,OAMA,IANA,CAMA,MANA,EAMA,MANA,EAOA,KAPA,CAOA,QAPA,EAOA,wBAPA,EAQA,IARA,CAQA,cARA,EAQA,GARA;AAUA,MAAA,GAAA,CACA,MADA,CACA,aAAA,KAAA,WADA,EAEA,MAFA,CAEA,GAFA,EAGA,IAHA,CAGA,OAHA,EAGA,OAHA;AAIA,KAlDA;AAoDA,IAAA,WApDA,yBAoDA;AACA,UAAA,EAAA,GAAA,IAAA;AACA,MAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,MAAA,KAAA,EAAA,CAAA;AAEA,UAAA,GAAA,GAAA,EAAA,CAAA,MAAA,CAAA,MAAA,KAAA,EAAA,CAAA;AAEA,UAAA,MAAA,GAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,EAAA;AACA,OAFA,CAAA;AAIA,UAAA,GAAA,GAAA,EAAA,CAAA,SAAA,GAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,UAAA,CAAA,EAAA,MAAA,CAAA,MAAA,CAAA;AACA,UAAA,GAAA,GAAA,EAAA,CACA,WADA,GAEA,MAFA,CAEA,CACA,CADA,EAEA,EAAA,CAAA,GAAA,CAAA,KAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,CAAA,KAAA;AACA,OAFA,CAFA,CAFA,EAQA,KARA,CAQA,CAAA,KAAA,WAAA,EAAA,CAAA,CARA,CAAA;AAUA,UAAA,KAAA,GAAA,EAAA,CACA,MADA,GACA;AADA,OAEA,MAFA,CAEA,CACA,CAAA,CAAA,EAAA,CAAA,CADA,EAEA,CAAA,KAAA,UAAA,EAAA,KAAA,WAAA,CAFA,CAFA,EAKA;AALA,OAMA,EANA,CAMA,KANA,EAMA,WANA,CAAA;AAQA,UAAA,IAAA,GAAA,EAAA,CACA,MADA,CACA,aAAA,KAAA,WADA,EAEA,MAFA,CAEA,GAFA,EAGA,KAHA,CAGA,KAAA,OAHA,CAAA,CA7BA,CAkCA;;AAEA,MAAA,IAAA,CACA,MADA,CACA,MADA,EAEA,UAFA,GAGA,QAHA,CAGA,IAHA,EAIA,IAJA,CAKA,GALA,EAMA,EAAA,CACA,IADA,GAEA,CAFA,CAEA,UAAA,CAAA,EAAA;AACA,eAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AACA,OAJA,EAKA,CALA,CAKA,UAAA,CAAA,EAAA;AACA,eAAA,GAAA,CAAA,CAAA,CAAA,KAAA,CAAA;AACA,OAPA,CANA;AAgBA,MAAA,GAAA,CAAA,MAAA,CAAA,QAAA,EAAA,IAAA,CAAA,KAAA;AACA,MAAA,GAAA,CAAA,MAAA,CAAA,QAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,IAAA;;AAEA,UAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,QAAA,EAAA,CAAA,MAAA,CAAA,YAAA,KAAA,WAAA,EACA,IADA,CACA,WADA,EACA,iBAAA,KAAA,WAAA,GAAA,GADA,EAEA,UAFA,GAGA,QAHA,CAGA,IAHA,EAIA,IAJA,CAIA,EAAA,CAAA,UAAA,CAAA,GAAA,CAJA;AAMA,QAAA,EAAA,CAAA,MAAA,CAAA,YAAA,KAAA,WAAA,EACA,UADA,GAEA,QAFA,CAEA,IAFA,EAGA,IAHA,CAGA,EAAA,CAAA,QAAA,CAAA,GAAA,EAAA,KAAA,CAAA,EAAA,EAAA,GAAA,CAHA;AAIA,OAXA,MAWA;AACA,QAAA,EAAA,CAAA,MAAA,CAAA,YAAA,KAAA,WAAA,EACA,SADA,CACA,GADA,EAEA,MAFA;AAGA,QAAA,EAAA,CAAA,MAAA,CAAA,YAAA,KAAA,WAAA,EACA,SADA,CACA,GADA,EAEA,MAFA;AAGA,OAzEA,CA0EA;;;AACA,MAAA,GAAA,CAAA,EAAA,CAAA,UAAA,EAAA,YAAA;AACA,YAAA,EAAA,CAAA,QAAA,EAAA;AACA;AACA;;AACA,YAAA,IAAA,GAAA,EAAA,CAAA,IAAA,CAAA,GAAA,EAAA;;AACA,YAAA,IAAA,EAAA;AACA,UAAA,UAAA,CAAA,IAAA,CAAA,SAAA,EAAA,IAAA,CAAA,OAAA,CAAA;AACA;AACA,OARA,EA3EA,CAqFA;;AAEA,UAAA,WAAA;;AACA,eAAA,KAAA,GAAA;AACA,QAAA,WAAA,GAAA,IAAA;AACA;;AAEA,eAAA,WAAA,CAAA,KAAA,EAAA;AACA,YAAA,EAAA,CAAA,QAAA,EAAA;AACA;AACA,SAHA,CAKA;;;AACA,YAAA,MAAA,GAAA,KAAA,CAAA,SAAA,CANA,CAOA;;AACA,YAAA,CAAA,MAAA,EAAA;AACA,cAAA,CAAA,WAAA,EAAA,OAAA,WAAA,GAAA,UAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CADA,CACA;;AACA,UAAA,GAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,SAHA,MAGA;AACA,UAAA,EAAA,CAAA,IAAA,CAAA,IAAA,CAAA;AACA,YAAA,SAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SADA;AAEA,YAAA,OAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAFA,WAAA;AAKA,cAAA,SAAA,GAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA;AACA,cAAA,OAAA,GAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA;AAEA,UAAA,UAAA,CAAA,SAAA,EAAA,OAAA,CAAA,CATA,CAUA;;AACA,UAAA,GAAA,CAAA,MAAA,CAAA,QAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,IAAA,EAXA,CAWA;AACA;AACA;;AAEA,eAAA,UAAA,CAAA,SAAA,EAAA,OAAA,EAAA;AACA,YAAA,EAAA,CAAA,QAAA,EAAA;AACA;AACA;;AACA,QAAA,EAAA,CAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,SAAA;AACA,QAAA,EAAA,CAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,OAAA;AACA,QAAA,EAAA,CAAA,MAAA,CAAA,QAAA,CAAA,2BAAA;AACA,QAAA,EAAA,CAAA,MAAA,CAAA,QAAA,CAAA,0BAAA;AACA;AACA;AAnLA;AA1EA,CAAA","sourcesContent":["<template>\n  <v-card>\n    <ChartControls v-bind:chartNumber=\"chartNumber\" class=\"mb-0\" />\n    <svg :id=\"id\" viewBox=\"0 0 960 450\"></svg>\n    <v-progress-circular\n      v-if=\"loading && !isFrozen\"\n      indeterminate\n      color=\"success\"\n    ></v-progress-circular>\n  </v-card>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport ChartControls from \"../ChartControls.vue\";\n\nexport default {\n  components: { ChartControls },\n\n  name: \"LineChart\",\n  props: {\n    data: {\n      required: true,\n    },\n    width: {\n      default: 960,\n      type: Number,\n    },\n    height: {\n      default: 450,\n      type: Number,\n    },\n    chartNumber: {\n      required: true,\n      type: Number,\n    },\n    isSummary: {\n      required: true,\n      type: Boolean,\n    },\n    isFrozen: {\n      required: true,\n      type: Boolean,\n    },\n  },\n  mounted() {\n    this.createLineChart();\n  },\n\n  data: () => ({\n    margin: { top: 10, right: 40, bottom: 30, left: 40 },\n    time: [],\n  }),\n\n  computed: {\n    id() {\n      return \"chart\" + this.chartNumber.toString();\n    },\n    payload() {\n      return this.data.payload;\n    },\n    loading() {\n      return this.data.loading;\n    },\n    chartWidth() {\n      return this.width - this.margin.left - this.margin.right;\n    },\n    chartHeight() {\n      return this.height - this.margin.top - this.margin.bottom;\n    },\n  },\n\n\n  watch: {\n    payload: function () {\n      if (this.isFrozen) {\n        return;\n      }\n      this.updateChart();\n    },\n    isFrozen: function() {\n      if (this.isFrozen) {\n        return\n      }\n      else {\n        this.updateChart();\n      }\n    }\n  },\n\n  methods: {\n    createLineChart() {\n      var svg = d3\n        .select(\"#\" + this.id)\n        .append(\"g\")\n        .attr(\n          \"transform\",\n          \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\"\n        );\n\n      svg.append(\"g\").attr(\"class\", \"axis\" + this.chartNumber);\n      svg.append(\"g\").attr(\"class\", \"defs\" + this.chartNumber);\n\n      svg.append(\"g\").attr(\"class\", \"content\" + this.chartNumber);\n\n      svg\n        .select(\"g.axis\" + this.chartNumber)\n        .append(\"g\")\n        .attr(\"class\", \"yAxis\" + this.chartNumber);\n\n      svg\n        .select(\"g.axis\" + this.chartNumber)\n        .append(\"g\")\n        .attr(\"class\", \"xAxis\" + this.chartNumber);\n\n      svg\n        .select(\".defs\" + this.chartNumber)\n        .append(\"defs\")\n        .append(\"svg:clipPath\")\n        .attr(\"id\", \"clip\" + this.chartNumber)\n        .append(\"svg:rect\")\n        .attr(\"width\", this.chartWidth)\n        .attr(\"height\", this.chartHeight)\n        .attr(\"x\", 0)\n        .attr(\"y\", 0);\n\n      svg\n        .select(\".content\" + this.chartNumber)\n        .append(\"g\")\n        .attr(\"clip-path\", \"url(#clip\" + this.chartNumber + \")\")\n        .append(\"path\")\n        .attr(\"class\", \"line\") // I add the class line to be able to modify this line later on.\n        .attr(\"fill\", \"none\")\n        .style(\"stroke\", \"var(--v-tertiary-base)\")\n        .attr(\"stroke-width\", 1.5);\n\n      svg\n        .select(\".content\" + this.chartNumber)\n        .append(\"g\")\n        .attr(\"class\", \"brush\");\n    },\n\n    updateChart() {\n      var vm = this;\n      svg = d3.select(\"#\" + this.id);\n\n      var svg = d3.select(\"#\" + this.id);\n\n      var domain = d3.extent(this.payload, function (d) {\n        return d.ts;\n      });\n\n      var scX = d3.scaleTime().range([0, this.chartWidth]).domain(domain);\n      var scY = d3\n        .scaleLinear()\n        .domain([\n          0,\n          d3.max(this.payload, function (d) {\n            return +d.value;\n          }),\n        ])\n        .range([this.chartHeight, 0]);\n\n      var brush = d3\n        .brushX() // Add the brush feature using the d3.brush function\n        .extent([\n          [0, 0],\n          [this.chartWidth, this.chartHeight],\n        ]) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n        .on(\"end\", updateChart);\n\n      var line = d3\n        .select(\".content\" + this.chartNumber)\n        .select(\"g\")\n        .datum(this.payload);\n\n      // Add the line\n\n      line\n        .select(\"path\")\n        .transition()\n        .duration(1000)\n        .attr(\n          \"d\",\n          d3\n            .line()\n            .x(function (d) {\n              return scX(d.ts);\n            })\n            .y(function (d) {\n              return scY(d.value);\n            })\n        );\n\n      svg.select(\".brush\").call(brush);\n      svg.select(\".brush\").call(brush.move, null);\n\n      if (this.payload.length > 0) {\n        d3.select(\"g.xAxis\" + this.chartNumber)\n          .attr(\"transform\", \"translate(0,\" + this.chartHeight + \")\")\n          .transition()\n          .duration(1000)\n          .call(d3.axisBottom(scX));\n\n        d3.select(\"g.yAxis\" + this.chartNumber)\n          .transition()\n          .duration(1000)\n          .call(d3.axisLeft(scY).ticks(10,\"s\"));\n      } else {\n        d3.select(\"g.yAxis\" + this.chartNumber)\n          .selectAll(\"*\")\n          .remove();\n        d3.select(\"g.xAxis\" + this.chartNumber)\n          .selectAll(\"*\")\n          .remove();\n      }\n      // If user double click, reinitialize the chart\n      svg.on(\"dblclick\", function () {\n        if (vm.isFrozen) {\n          return;\n        }\n        var time = vm.time.pop();\n        if (time) {\n          updateData(time.startTime, time.endTime);\n        }\n      });\n\n      //add X-Axis\n\n      var idleTimeout;\n      function idled() {\n        idleTimeout = null;\n      }\n\n      function updateChart(event) {\n        if (vm.isFrozen) {\n          return;\n        }\n\n        // What are the selected boundaries?\n        var extent = event.selection;\n        // If no selection, back to initial coordinate. Otherwise, update X axis domain\n        if (!extent) {\n          if (!idleTimeout) return (idleTimeout = setTimeout(idled, 350)); // This allows to wait a little bit\n          scX.domain([4, 8]);\n        } else {\n          vm.time.push({\n            startTime: vm.$store.state.startTime,\n            endTime: vm.$store.state.endTime,\n          });\n\n          var startTime = scX.invert(extent[0]).getTime();\n          var endTime = scX.invert(extent[1]).getTime();\n\n          updateData(startTime, endTime);\n          // scX.domain([scX.invert(extent[0]), scX.invert(extent[1])]);\n          svg.select(\".brush\").call(brush.move, null); // This remove the grey brush area as soon as the selection has been done\n        }\n      }\n\n      function updateData(startTime, endTime) {\n        if (vm.isFrozen) {\n          return;\n        }\n        vm.$store.dispatch(\"setStartTime\", startTime);\n        vm.$store.dispatch(\"setEndTime\", endTime);\n        vm.$store.dispatch(\"summaryData/getDataByTime\");\n        vm.$store.dispatch(\"detailData/getDataByTime\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\ng.tick {\n  fill: black;\n}\n</style>"],"sourceRoot":"src/components/chartComponents"}]}